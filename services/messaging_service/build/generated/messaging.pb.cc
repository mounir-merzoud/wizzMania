// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: messaging.proto
// Protobuf C++ Version: 6.32.1

#include "messaging.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace securecloud {
namespace messaging {

inline constexpr SendAck::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        accepted_{false} {}

template <typename>
PROTOBUF_CONSTEXPR SendAck::SendAck(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(SendAck_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct SendAckDefaultTypeInternal {
  PROTOBUF_CONSTEXPR SendAckDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~SendAckDefaultTypeInternal() {}
  union {
    SendAck _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 SendAckDefaultTypeInternal _SendAck_default_instance_;

inline constexpr HistoryRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        conversation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        limit_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HistoryRequest::HistoryRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HistoryRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoryRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoryRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoryRequestDefaultTypeInternal() {}
  union {
    HistoryRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoryRequestDefaultTypeInternal _HistoryRequest_default_instance_;

inline constexpr EncryptedMessage::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        message_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        conversation_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        sender_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        ciphertext_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        nonce_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        timestamp_unix_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR EncryptedMessage::EncryptedMessage(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(EncryptedMessage_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct EncryptedMessageDefaultTypeInternal {
  PROTOBUF_CONSTEXPR EncryptedMessageDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~EncryptedMessageDefaultTypeInternal() {}
  union {
    EncryptedMessage _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 EncryptedMessageDefaultTypeInternal _EncryptedMessage_default_instance_;

inline constexpr HistoryResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : messages_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR HistoryResponse::HistoryResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(HistoryResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct HistoryResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR HistoryResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~HistoryResponseDefaultTypeInternal() {}
  union {
    HistoryResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 HistoryResponseDefaultTypeInternal _HistoryResponse_default_instance_;
}  // namespace messaging
}  // namespace securecloud
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_messaging_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_messaging_2eproto = nullptr;
const ::uint32_t
    TableStruct_messaging_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::EncryptedMessage, _impl_._has_bits_),
        9, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::EncryptedMessage, _impl_.message_id_),
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::EncryptedMessage, _impl_.conversation_id_),
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::EncryptedMessage, _impl_.sender_id_),
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::EncryptedMessage, _impl_.ciphertext_),
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::EncryptedMessage, _impl_.nonce_),
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::EncryptedMessage, _impl_.timestamp_unix_),
        0,
        1,
        2,
        3,
        4,
        5,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::SendAck, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::SendAck, _impl_.message_id_),
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::SendAck, _impl_.accepted_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::HistoryRequest, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::HistoryRequest, _impl_.conversation_id_),
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::HistoryRequest, _impl_.limit_),
        0,
        1,
        0x000, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::messaging::HistoryResponse, _impl_.messages_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::securecloud::messaging::EncryptedMessage)},
        {15, sizeof(::securecloud::messaging::SendAck)},
        {22, sizeof(::securecloud::messaging::HistoryRequest)},
        {29, sizeof(::securecloud::messaging::HistoryResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::securecloud::messaging::_EncryptedMessage_default_instance_._instance,
    &::securecloud::messaging::_SendAck_default_instance_._instance,
    &::securecloud::messaging::_HistoryRequest_default_instance_._instance,
    &::securecloud::messaging::_HistoryResponse_default_instance_._instance,
};
const char descriptor_table_protodef_messaging_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\017messaging.proto\022\025securecloud.messaging"
    "\"\215\001\n\020EncryptedMessage\022\022\n\nmessage_id\030\001 \001("
    "\t\022\027\n\017conversation_id\030\002 \001(\t\022\021\n\tsender_id\030"
    "\003 \001(\t\022\022\n\nciphertext\030\004 \001(\014\022\r\n\005nonce\030\005 \001(\014"
    "\022\026\n\016timestamp_unix\030\006 \001(\003\"/\n\007SendAck\022\022\n\nm"
    "essage_id\030\001 \001(\t\022\020\n\010accepted\030\002 \001(\010\"8\n\016His"
    "toryRequest\022\027\n\017conversation_id\030\001 \001(\t\022\r\n\005"
    "limit\030\002 \001(\005\"L\n\017HistoryResponse\0229\n\010messag"
    "es\030\001 \003(\0132\'.securecloud.messaging.Encrypt"
    "edMessage2\253\002\n\020MessagingService\022V\n\013SendMe"
    "ssage\022\'.securecloud.messaging.EncryptedM"
    "essage\032\036.securecloud.messaging.SendAck\022["
    "\n\nGetHistory\022%.securecloud.messaging.His"
    "toryRequest\032&.securecloud.messaging.Hist"
    "oryResponse\022b\n\nChatStream\022\'.securecloud."
    "messaging.EncryptedMessage\032\'.securecloud"
    ".messaging.EncryptedMessage(\0010\001b\006proto3"
};
static ::absl::once_flag descriptor_table_messaging_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_messaging_2eproto = {
    false,
    false,
    679,
    descriptor_table_protodef_messaging_2eproto,
    "messaging.proto",
    &descriptor_table_messaging_2eproto_once,
    nullptr,
    0,
    4,
    schemas,
    file_default_instances,
    TableStruct_messaging_2eproto::offsets,
    file_level_enum_descriptors_messaging_2eproto,
    file_level_service_descriptors_messaging_2eproto,
};
namespace securecloud {
namespace messaging {
// ===================================================================

class EncryptedMessage::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<EncryptedMessage>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_._has_bits_);
};

EncryptedMessage::EncryptedMessage(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncryptedMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.messaging.EncryptedMessage)
}
PROTOBUF_NDEBUG_INLINE EncryptedMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::securecloud::messaging::EncryptedMessage& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_id_(arena, from.message_id_),
        conversation_id_(arena, from.conversation_id_),
        sender_id_(arena, from.sender_id_),
        ciphertext_(arena, from.ciphertext_),
        nonce_(arena, from.nonce_) {}

EncryptedMessage::EncryptedMessage(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const EncryptedMessage& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, EncryptedMessage_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  EncryptedMessage* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.timestamp_unix_ = from._impl_.timestamp_unix_;

  // @@protoc_insertion_point(copy_constructor:securecloud.messaging.EncryptedMessage)
}
PROTOBUF_NDEBUG_INLINE EncryptedMessage::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_id_(arena),
        conversation_id_(arena),
        sender_id_(arena),
        ciphertext_(arena),
        nonce_(arena) {}

inline void EncryptedMessage::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.timestamp_unix_ = {};
}
EncryptedMessage::~EncryptedMessage() {
  // @@protoc_insertion_point(destructor:securecloud.messaging.EncryptedMessage)
  SharedDtor(*this);
}
inline void EncryptedMessage::SharedDtor(MessageLite& self) {
  EncryptedMessage& this_ = static_cast<EncryptedMessage&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_id_.Destroy();
  this_._impl_.conversation_id_.Destroy();
  this_._impl_.sender_id_.Destroy();
  this_._impl_.ciphertext_.Destroy();
  this_._impl_.nonce_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL EncryptedMessage::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) EncryptedMessage(arena);
}
constexpr auto EncryptedMessage::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(EncryptedMessage),
                                            alignof(EncryptedMessage));
}
constexpr auto EncryptedMessage::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_EncryptedMessage_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &EncryptedMessage::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<EncryptedMessage>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &EncryptedMessage::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<EncryptedMessage>(), &EncryptedMessage::ByteSizeLong,
              &EncryptedMessage::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_._cached_size_),
          false,
      },
      &EncryptedMessage::kDescriptorMethods,
      &descriptor_table_messaging_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull EncryptedMessage_class_data_ =
        EncryptedMessage::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
EncryptedMessage::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&EncryptedMessage_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(EncryptedMessage_class_data_.tc_table);
  return EncryptedMessage_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 6, 0, 81, 2>
EncryptedMessage::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_._has_bits_),
    0, // no _extensions_
    6, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967232,  // skipmap
    offsetof(decltype(_table_), field_entries),
    6,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    EncryptedMessage_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::messaging::EncryptedMessage>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string message_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.message_id_)}},
    // string conversation_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.conversation_id_)}},
    // string sender_id = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.sender_id_)}},
    // bytes ciphertext = 4;
    {::_pbi::TcParser::FastBS1,
     {34, 3, 0, PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.ciphertext_)}},
    // bytes nonce = 5;
    {::_pbi::TcParser::FastBS1,
     {42, 4, 0, PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.nonce_)}},
    // int64 timestamp_unix = 6;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(EncryptedMessage, _impl_.timestamp_unix_), 5>(),
     {48, 5, 0, PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.timestamp_unix_)}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string message_id = 1;
    {PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.message_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string conversation_id = 2;
    {PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.conversation_id_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string sender_id = 3;
    {PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.sender_id_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bytes ciphertext = 4;
    {PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.ciphertext_), _Internal::kHasBitsOffset + 3, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // bytes nonce = 5;
    {PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.nonce_), _Internal::kHasBitsOffset + 4, 0, (0 | ::_fl::kFcOptional | ::_fl::kBytes | ::_fl::kRepAString)},
    // int64 timestamp_unix = 6;
    {PROTOBUF_FIELD_OFFSET(EncryptedMessage, _impl_.timestamp_unix_), _Internal::kHasBitsOffset + 5, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\46\12\17\11\0\0\0\0"
    "securecloud.messaging.EncryptedMessage"
    "message_id"
    "conversation_id"
    "sender_id"
  }},
};
PROTOBUF_NOINLINE void EncryptedMessage::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.messaging.EncryptedMessage)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000001fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.message_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.conversation_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.sender_id_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      _impl_.ciphertext_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      _impl_.nonce_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.timestamp_unix_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL EncryptedMessage::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const EncryptedMessage& this_ = static_cast<const EncryptedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL EncryptedMessage::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const EncryptedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.messaging.EncryptedMessage)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_message_id().empty()) {
      const ::std::string& _s = this_._internal_message_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.messaging.EncryptedMessage.message_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string conversation_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_conversation_id().empty()) {
      const ::std::string& _s = this_._internal_conversation_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.messaging.EncryptedMessage.conversation_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string sender_id = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_sender_id().empty()) {
      const ::std::string& _s = this_._internal_sender_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.messaging.EncryptedMessage.sender_id");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  // bytes ciphertext = 4;
  if ((this_._impl_._has_bits_[0] & 0x00000008U) != 0) {
    if (!this_._internal_ciphertext().empty()) {
      const ::std::string& _s = this_._internal_ciphertext();
      target = stream->WriteBytesMaybeAliased(4, _s, target);
    }
  }

  // bytes nonce = 5;
  if ((this_._impl_._has_bits_[0] & 0x00000010U) != 0) {
    if (!this_._internal_nonce().empty()) {
      const ::std::string& _s = this_._internal_nonce();
      target = stream->WriteBytesMaybeAliased(5, _s, target);
    }
  }

  // int64 timestamp_unix = 6;
  if ((this_._impl_._has_bits_[0] & 0x00000020U) != 0) {
    if (this_._internal_timestamp_unix() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<6>(
              stream, this_._internal_timestamp_unix(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.messaging.EncryptedMessage)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t EncryptedMessage::ByteSizeLong(const MessageLite& base) {
  const EncryptedMessage& this_ = static_cast<const EncryptedMessage&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t EncryptedMessage::ByteSizeLong() const {
  const EncryptedMessage& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.messaging.EncryptedMessage)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    // string message_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message_id());
      }
    }
    // string conversation_id = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_conversation_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_conversation_id());
      }
    }
    // string sender_id = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_sender_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_sender_id());
      }
    }
    // bytes ciphertext = 4;
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!this_._internal_ciphertext().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_ciphertext());
      }
    }
    // bytes nonce = 5;
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!this_._internal_nonce().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(
                                        this_._internal_nonce());
      }
    }
    // int64 timestamp_unix = 6;
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (this_._internal_timestamp_unix() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_timestamp_unix());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void EncryptedMessage::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<EncryptedMessage*>(&to_msg);
  auto& from = static_cast<const EncryptedMessage&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.messaging.EncryptedMessage)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x0000003fU) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_message_id().empty()) {
        _this->_internal_set_message_id(from._internal_message_id());
      } else {
        if (_this->_impl_.message_id_.IsDefault()) {
          _this->_internal_set_message_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_conversation_id().empty()) {
        _this->_internal_set_conversation_id(from._internal_conversation_id());
      } else {
        if (_this->_impl_.conversation_id_.IsDefault()) {
          _this->_internal_set_conversation_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_sender_id().empty()) {
        _this->_internal_set_sender_id(from._internal_sender_id());
      } else {
        if (_this->_impl_.sender_id_.IsDefault()) {
          _this->_internal_set_sender_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000008U) != 0) {
      if (!from._internal_ciphertext().empty()) {
        _this->_internal_set_ciphertext(from._internal_ciphertext());
      } else {
        if (_this->_impl_.ciphertext_.IsDefault()) {
          _this->_internal_set_ciphertext("");
        }
      }
    }
    if ((cached_has_bits & 0x00000010U) != 0) {
      if (!from._internal_nonce().empty()) {
        _this->_internal_set_nonce(from._internal_nonce());
      } else {
        if (_this->_impl_.nonce_.IsDefault()) {
          _this->_internal_set_nonce("");
        }
      }
    }
    if ((cached_has_bits & 0x00000020U) != 0) {
      if (from._internal_timestamp_unix() != 0) {
        _this->_impl_.timestamp_unix_ = from._impl_.timestamp_unix_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void EncryptedMessage::CopyFrom(const EncryptedMessage& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.messaging.EncryptedMessage)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void EncryptedMessage::InternalSwap(EncryptedMessage* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_id_, &other->_impl_.message_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conversation_id_, &other->_impl_.conversation_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.sender_id_, &other->_impl_.sender_id_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.ciphertext_, &other->_impl_.ciphertext_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.nonce_, &other->_impl_.nonce_, arena);
  swap(_impl_.timestamp_unix_, other->_impl_.timestamp_unix_);
}

::google::protobuf::Metadata EncryptedMessage::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class SendAck::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<SendAck>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(SendAck, _impl_._has_bits_);
};

SendAck::SendAck(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SendAck_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.messaging.SendAck)
}
PROTOBUF_NDEBUG_INLINE SendAck::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::securecloud::messaging::SendAck& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        message_id_(arena, from.message_id_) {}

SendAck::SendAck(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const SendAck& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, SendAck_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SendAck* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.accepted_ = from._impl_.accepted_;

  // @@protoc_insertion_point(copy_constructor:securecloud.messaging.SendAck)
}
PROTOBUF_NDEBUG_INLINE SendAck::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        message_id_(arena) {}

inline void SendAck::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.accepted_ = {};
}
SendAck::~SendAck() {
  // @@protoc_insertion_point(destructor:securecloud.messaging.SendAck)
  SharedDtor(*this);
}
inline void SendAck::SharedDtor(MessageLite& self) {
  SendAck& this_ = static_cast<SendAck&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.message_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL SendAck::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) SendAck(arena);
}
constexpr auto SendAck::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(SendAck),
                                            alignof(SendAck));
}
constexpr auto SendAck::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_SendAck_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &SendAck::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<SendAck>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &SendAck::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<SendAck>(), &SendAck::ByteSizeLong,
              &SendAck::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(SendAck, _impl_._cached_size_),
          false,
      },
      &SendAck::kDescriptorMethods,
      &descriptor_table_messaging_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull SendAck_class_data_ =
        SendAck::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
SendAck::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&SendAck_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(SendAck_class_data_.tc_table);
  return SendAck_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 48, 2>
SendAck::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(SendAck, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    SendAck_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::messaging::SendAck>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool accepted = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(SendAck, _impl_.accepted_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(SendAck, _impl_.accepted_)}},
    // string message_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(SendAck, _impl_.message_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string message_id = 1;
    {PROTOBUF_FIELD_OFFSET(SendAck, _impl_.message_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // bool accepted = 2;
    {PROTOBUF_FIELD_OFFSET(SendAck, _impl_.accepted_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\35\12\0\0\0\0\0\0"
    "securecloud.messaging.SendAck"
    "message_id"
  }},
};
PROTOBUF_NOINLINE void SendAck::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.messaging.SendAck)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.message_id_.ClearNonDefaultToEmpty();
  }
  _impl_.accepted_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL SendAck::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const SendAck& this_ = static_cast<const SendAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL SendAck::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const SendAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.messaging.SendAck)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string message_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_message_id().empty()) {
      const ::std::string& _s = this_._internal_message_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.messaging.SendAck.message_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // bool accepted = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_accepted() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          2, this_._internal_accepted(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.messaging.SendAck)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t SendAck::ByteSizeLong(const MessageLite& base) {
  const SendAck& this_ = static_cast<const SendAck&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t SendAck::ByteSizeLong() const {
  const SendAck& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.messaging.SendAck)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string message_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_message_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_message_id());
      }
    }
    // bool accepted = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_accepted() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void SendAck::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<SendAck*>(&to_msg);
  auto& from = static_cast<const SendAck&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.messaging.SendAck)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_message_id().empty()) {
        _this->_internal_set_message_id(from._internal_message_id());
      } else {
        if (_this->_impl_.message_id_.IsDefault()) {
          _this->_internal_set_message_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_accepted() != 0) {
        _this->_impl_.accepted_ = from._impl_.accepted_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void SendAck::CopyFrom(const SendAck& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.messaging.SendAck)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void SendAck::InternalSwap(SendAck* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.message_id_, &other->_impl_.message_id_, arena);
  swap(_impl_.accepted_, other->_impl_.accepted_);
}

::google::protobuf::Metadata SendAck::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoryRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<HistoryRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_._has_bits_);
};

HistoryRequest::HistoryRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.messaging.HistoryRequest)
}
PROTOBUF_NDEBUG_INLINE HistoryRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::securecloud::messaging::HistoryRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        conversation_id_(arena, from.conversation_id_) {}

HistoryRequest::HistoryRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HistoryRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoryRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoryRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.limit_ = from._impl_.limit_;

  // @@protoc_insertion_point(copy_constructor:securecloud.messaging.HistoryRequest)
}
PROTOBUF_NDEBUG_INLINE HistoryRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        conversation_id_(arena) {}

inline void HistoryRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.limit_ = {};
}
HistoryRequest::~HistoryRequest() {
  // @@protoc_insertion_point(destructor:securecloud.messaging.HistoryRequest)
  SharedDtor(*this);
}
inline void HistoryRequest::SharedDtor(MessageLite& self) {
  HistoryRequest& this_ = static_cast<HistoryRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.conversation_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HistoryRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HistoryRequest(arena);
}
constexpr auto HistoryRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(HistoryRequest),
                                            alignof(HistoryRequest));
}
constexpr auto HistoryRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HistoryRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HistoryRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HistoryRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HistoryRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HistoryRequest>(), &HistoryRequest::ByteSizeLong,
              &HistoryRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_._cached_size_),
          false,
      },
      &HistoryRequest::kDescriptorMethods,
      &descriptor_table_messaging_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HistoryRequest_class_data_ =
        HistoryRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HistoryRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HistoryRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HistoryRequest_class_data_.tc_table);
  return HistoryRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 60, 2>
HistoryRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    HistoryRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::messaging::HistoryRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 limit = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(HistoryRequest, _impl_.limit_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.limit_)}},
    // string conversation_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.conversation_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string conversation_id = 1;
    {PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.conversation_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 limit = 2;
    {PROTOBUF_FIELD_OFFSET(HistoryRequest, _impl_.limit_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\44\17\0\0\0\0\0\0"
    "securecloud.messaging.HistoryRequest"
    "conversation_id"
  }},
};
PROTOBUF_NOINLINE void HistoryRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.messaging.HistoryRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.conversation_id_.ClearNonDefaultToEmpty();
  }
  _impl_.limit_ = 0;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HistoryRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HistoryRequest& this_ = static_cast<const HistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HistoryRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.messaging.HistoryRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string conversation_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_conversation_id().empty()) {
      const ::std::string& _s = this_._internal_conversation_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.messaging.HistoryRequest.conversation_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int32 limit = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_limit() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt32ToArrayWithField<2>(
              stream, this_._internal_limit(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.messaging.HistoryRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HistoryRequest::ByteSizeLong(const MessageLite& base) {
  const HistoryRequest& this_ = static_cast<const HistoryRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HistoryRequest::ByteSizeLong() const {
  const HistoryRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.messaging.HistoryRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string conversation_id = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_conversation_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_conversation_id());
      }
    }
    // int32 limit = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_limit() != 0) {
        total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
            this_._internal_limit());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HistoryRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoryRequest*>(&to_msg);
  auto& from = static_cast<const HistoryRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.messaging.HistoryRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_conversation_id().empty()) {
        _this->_internal_set_conversation_id(from._internal_conversation_id());
      } else {
        if (_this->_impl_.conversation_id_.IsDefault()) {
          _this->_internal_set_conversation_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_limit() != 0) {
        _this->_impl_.limit_ = from._impl_.limit_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoryRequest::CopyFrom(const HistoryRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.messaging.HistoryRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoryRequest::InternalSwap(HistoryRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.conversation_id_, &other->_impl_.conversation_id_, arena);
  swap(_impl_.limit_, other->_impl_.limit_);
}

::google::protobuf::Metadata HistoryRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class HistoryResponse::_Internal {
 public:
};

HistoryResponse::HistoryResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.messaging.HistoryResponse)
}
PROTOBUF_NDEBUG_INLINE HistoryResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::securecloud::messaging::HistoryResponse& from_msg)
      : messages_{visibility, arena, from.messages_},
        _cached_size_{0} {}

HistoryResponse::HistoryResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const HistoryResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, HistoryResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  HistoryResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:securecloud.messaging.HistoryResponse)
}
PROTOBUF_NDEBUG_INLINE HistoryResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : messages_{visibility, arena},
        _cached_size_{0} {}

inline void HistoryResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
HistoryResponse::~HistoryResponse() {
  // @@protoc_insertion_point(destructor:securecloud.messaging.HistoryResponse)
  SharedDtor(*this);
}
inline void HistoryResponse::SharedDtor(MessageLite& self) {
  HistoryResponse& this_ = static_cast<HistoryResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL HistoryResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) HistoryResponse(arena);
}
constexpr auto HistoryResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(HistoryResponse, _impl_.messages_) +
          decltype(HistoryResponse::_impl_.messages_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(HistoryResponse), alignof(HistoryResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&HistoryResponse::PlacementNew_,
                                 sizeof(HistoryResponse),
                                 alignof(HistoryResponse));
  }
}
constexpr auto HistoryResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_HistoryResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &HistoryResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<HistoryResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &HistoryResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<HistoryResponse>(), &HistoryResponse::ByteSizeLong,
              &HistoryResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(HistoryResponse, _impl_._cached_size_),
          false,
      },
      &HistoryResponse::kDescriptorMethods,
      &descriptor_table_messaging_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull HistoryResponse_class_data_ =
        HistoryResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
HistoryResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&HistoryResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(HistoryResponse_class_data_.tc_table);
  return HistoryResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2>
HistoryResponse::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    HistoryResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::messaging::HistoryResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .securecloud.messaging.EncryptedMessage messages = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(HistoryResponse, _impl_.messages_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .securecloud.messaging.EncryptedMessage messages = 1;
    {PROTOBUF_FIELD_OFFSET(HistoryResponse, _impl_.messages_), 0, 0, (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }},
  {{
      {::_pbi::TcParser::GetTable<::securecloud::messaging::EncryptedMessage>()},
  }},
  {{
  }},
};
PROTOBUF_NOINLINE void HistoryResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.messaging.HistoryResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.messages_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL HistoryResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const HistoryResponse& this_ = static_cast<const HistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL HistoryResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const HistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.messaging.HistoryResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // repeated .securecloud.messaging.EncryptedMessage messages = 1;
  for (unsigned i = 0, n = static_cast<unsigned>(
                           this_._internal_messages_size());
       i < n; i++) {
    const auto& repfield = this_._internal_messages().Get(i);
    target =
        ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
            1, repfield, repfield.GetCachedSize(),
            target, stream);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.messaging.HistoryResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t HistoryResponse::ByteSizeLong(const MessageLite& base) {
  const HistoryResponse& this_ = static_cast<const HistoryResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t HistoryResponse::ByteSizeLong() const {
  const HistoryResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.messaging.HistoryResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated .securecloud.messaging.EncryptedMessage messages = 1;
    {
      total_size += 1UL * this_._internal_messages_size();
      for (const auto& msg : this_._internal_messages()) {
        total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void HistoryResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<HistoryResponse*>(&to_msg);
  auto& from = static_cast<const HistoryResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.messaging.HistoryResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_messages()->MergeFrom(
      from._internal_messages());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void HistoryResponse::CopyFrom(const HistoryResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.messaging.HistoryResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void HistoryResponse::InternalSwap(HistoryResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.messages_.InternalSwap(&other->_impl_.messages_);
}

::google::protobuf::Metadata HistoryResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace messaging
}  // namespace securecloud
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_messaging_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
