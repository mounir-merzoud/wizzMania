// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: auth.proto
// Protobuf C++ Version: 6.32.1

#include "auth.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace securecloud {
namespace auth {

inline constexpr ValidateTokenResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        permissions_{},
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        valid_{false} {}

template <typename>
PROTOBUF_CONSTEXPR ValidateTokenResponse::ValidateTokenResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidateTokenResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateTokenResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateTokenResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateTokenResponseDefaultTypeInternal() {}
  union {
    ValidateTokenResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateTokenResponseDefaultTypeInternal _ValidateTokenResponse_default_instance_;

inline constexpr ValidateTokenRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        access_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR ValidateTokenRequest::ValidateTokenRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(ValidateTokenRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct ValidateTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR ValidateTokenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~ValidateTokenRequestDefaultTypeInternal() {}
  union {
    ValidateTokenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 ValidateTokenRequestDefaultTypeInternal _ValidateTokenRequest_default_instance_;

inline constexpr RevokeTokensResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        success_{false} {}

template <typename>
PROTOBUF_CONSTEXPR RevokeTokensResponse::RevokeTokensResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RevokeTokensResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RevokeTokensResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RevokeTokensResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RevokeTokensResponseDefaultTypeInternal() {}
  union {
    RevokeTokensResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RevokeTokensResponseDefaultTypeInternal _RevokeTokensResponse_default_instance_;

inline constexpr RevokeTokensRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RevokeTokensRequest::RevokeTokensRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RevokeTokensRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RevokeTokensRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RevokeTokensRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RevokeTokensRequestDefaultTypeInternal() {}
  union {
    RevokeTokensRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RevokeTokensRequestDefaultTypeInternal _RevokeTokensRequest_default_instance_;

inline constexpr RefreshTokenResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        access_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expires_in_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR RefreshTokenResponse::RefreshTokenResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RefreshTokenResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RefreshTokenResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshTokenResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshTokenResponseDefaultTypeInternal() {}
  union {
    RefreshTokenResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshTokenResponseDefaultTypeInternal _RefreshTokenResponse_default_instance_;

inline constexpr RefreshTokenRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        refresh_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR RefreshTokenRequest::RefreshTokenRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(RefreshTokenRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct RefreshTokenRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR RefreshTokenRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~RefreshTokenRequestDefaultTypeInternal() {}
  union {
    RefreshTokenRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 RefreshTokenRequestDefaultTypeInternal _RefreshTokenRequest_default_instance_;

inline constexpr LoginResponse::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        access_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        refresh_token_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        expires_in_{::int64_t{0}} {}

template <typename>
PROTOBUF_CONSTEXPR LoginResponse::LoginResponse(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LoginResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoginResponseDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginResponseDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginResponseDefaultTypeInternal() {}
  union {
    LoginResponse _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;

inline constexpr LoginRequest::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : _cached_size_{0},
        username_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        password_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        mfa_code_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()) {}

template <typename>
PROTOBUF_CONSTEXPR LoginRequest::LoginRequest(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(LoginRequest_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct LoginRequestDefaultTypeInternal {
  PROTOBUF_CONSTEXPR LoginRequestDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~LoginRequestDefaultTypeInternal() {}
  union {
    LoginRequest _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
}  // namespace auth
}  // namespace securecloud
static constexpr const ::_pb::EnumDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_enum_descriptors_auth_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor *PROTOBUF_NONNULL *PROTOBUF_NULLABLE
    file_level_service_descriptors_auth_2eproto = nullptr;
const ::uint32_t
    TableStruct_auth_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::LoginRequest, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::LoginRequest, _impl_.username_),
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::LoginRequest, _impl_.password_),
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::LoginRequest, _impl_.mfa_code_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::LoginResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::LoginResponse, _impl_.access_token_),
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::LoginResponse, _impl_.refresh_token_),
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::LoginResponse, _impl_.expires_in_),
        0,
        1,
        2,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::RefreshTokenRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::RefreshTokenRequest, _impl_.refresh_token_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::RefreshTokenResponse, _impl_._has_bits_),
        5, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::RefreshTokenResponse, _impl_.access_token_),
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::RefreshTokenResponse, _impl_.expires_in_),
        0,
        1,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::ValidateTokenRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::ValidateTokenRequest, _impl_.access_token_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::ValidateTokenResponse, _impl_._has_bits_),
        6, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::ValidateTokenResponse, _impl_.valid_),
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::ValidateTokenResponse, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::ValidateTokenResponse, _impl_.permissions_),
        1,
        0,
        ~0u,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::RevokeTokensRequest, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::RevokeTokensRequest, _impl_.user_id_),
        0,
        0x081, // bitmap
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::RevokeTokensResponse, _impl_._has_bits_),
        4, // hasbit index offset
        PROTOBUF_FIELD_OFFSET(::securecloud::auth::RevokeTokensResponse, _impl_.success_),
        0,
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, sizeof(::securecloud::auth::LoginRequest)},
        {9, sizeof(::securecloud::auth::LoginResponse)},
        {18, sizeof(::securecloud::auth::RefreshTokenRequest)},
        {23, sizeof(::securecloud::auth::RefreshTokenResponse)},
        {30, sizeof(::securecloud::auth::ValidateTokenRequest)},
        {35, sizeof(::securecloud::auth::ValidateTokenResponse)},
        {44, sizeof(::securecloud::auth::RevokeTokensRequest)},
        {49, sizeof(::securecloud::auth::RevokeTokensResponse)},
};
static const ::_pb::Message* PROTOBUF_NONNULL const file_default_instances[] = {
    &::securecloud::auth::_LoginRequest_default_instance_._instance,
    &::securecloud::auth::_LoginResponse_default_instance_._instance,
    &::securecloud::auth::_RefreshTokenRequest_default_instance_._instance,
    &::securecloud::auth::_RefreshTokenResponse_default_instance_._instance,
    &::securecloud::auth::_ValidateTokenRequest_default_instance_._instance,
    &::securecloud::auth::_ValidateTokenResponse_default_instance_._instance,
    &::securecloud::auth::_RevokeTokensRequest_default_instance_._instance,
    &::securecloud::auth::_RevokeTokensResponse_default_instance_._instance,
};
const char descriptor_table_protodef_auth_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\nauth.proto\022\020securecloud.auth\"D\n\014LoginR"
    "equest\022\020\n\010username\030\001 \001(\t\022\020\n\010password\030\002 \001"
    "(\t\022\020\n\010mfa_code\030\003 \001(\t\"P\n\rLoginResponse\022\024\n"
    "\014access_token\030\001 \001(\t\022\025\n\rrefresh_token\030\002 \001"
    "(\t\022\022\n\nexpires_in\030\003 \001(\003\",\n\023RefreshTokenRe"
    "quest\022\025\n\rrefresh_token\030\001 \001(\t\"@\n\024RefreshT"
    "okenResponse\022\024\n\014access_token\030\001 \001(\t\022\022\n\nex"
    "pires_in\030\002 \001(\003\",\n\024ValidateTokenRequest\022\024"
    "\n\014access_token\030\001 \001(\t\"L\n\025ValidateTokenRes"
    "ponse\022\r\n\005valid\030\001 \001(\010\022\017\n\007user_id\030\002 \001(\t\022\023\n"
    "\013permissions\030\003 \003(\t\"&\n\023RevokeTokensReques"
    "t\022\017\n\007user_id\030\001 \001(\t\"\'\n\024RevokeTokensRespon"
    "se\022\017\n\007success\030\001 \001(\0102\367\002\n\013AuthService\022H\n\005L"
    "ogin\022\036.securecloud.auth.LoginRequest\032\037.s"
    "ecurecloud.auth.LoginResponse\022]\n\014Refresh"
    "Token\022%.securecloud.auth.RefreshTokenReq"
    "uest\032&.securecloud.auth.RefreshTokenResp"
    "onse\022`\n\rValidateToken\022&.securecloud.auth"
    ".ValidateTokenRequest\032\'.securecloud.auth"
    ".ValidateTokenResponse\022]\n\014RevokeTokens\022%"
    ".securecloud.auth.RevokeTokensRequest\032&."
    "securecloud.auth.RevokeTokensResponseb\006p"
    "roto3"
};
static ::absl::once_flag descriptor_table_auth_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_auth_2eproto = {
    false,
    false,
    885,
    descriptor_table_protodef_auth_2eproto,
    "auth.proto",
    &descriptor_table_auth_2eproto_once,
    nullptr,
    0,
    8,
    schemas,
    file_default_instances,
    TableStruct_auth_2eproto::offsets,
    file_level_enum_descriptors_auth_2eproto,
    file_level_service_descriptors_auth_2eproto,
};
namespace securecloud {
namespace auth {
// ===================================================================

class LoginRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LoginRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_._has_bits_);
};

LoginRequest::LoginRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LoginRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.auth.LoginRequest)
}
PROTOBUF_NDEBUG_INLINE LoginRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::securecloud::auth::LoginRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        username_(arena, from.username_),
        password_(arena, from.password_),
        mfa_code_(arena, from.mfa_code_) {}

LoginRequest::LoginRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LoginRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LoginRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LoginRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:securecloud.auth.LoginRequest)
}
PROTOBUF_NDEBUG_INLINE LoginRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        username_(arena),
        password_(arena),
        mfa_code_(arena) {}

inline void LoginRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
LoginRequest::~LoginRequest() {
  // @@protoc_insertion_point(destructor:securecloud.auth.LoginRequest)
  SharedDtor(*this);
}
inline void LoginRequest::SharedDtor(MessageLite& self) {
  LoginRequest& this_ = static_cast<LoginRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.username_.Destroy();
  this_._impl_.password_.Destroy();
  this_._impl_.mfa_code_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LoginRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LoginRequest(arena);
}
constexpr auto LoginRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LoginRequest),
                                            alignof(LoginRequest));
}
constexpr auto LoginRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LoginRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LoginRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LoginRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LoginRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LoginRequest>(), &LoginRequest::ByteSizeLong,
              &LoginRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_._cached_size_),
          false,
      },
      &LoginRequest::kDescriptorMethods,
      &descriptor_table_auth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LoginRequest_class_data_ =
        LoginRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LoginRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LoginRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LoginRequest_class_data_.tc_table);
  return LoginRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 62, 2>
LoginRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LoginRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::auth::LoginRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string username = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.username_)}},
    // string password = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.password_)}},
    // string mfa_code = 3;
    {::_pbi::TcParser::FastUS1,
     {26, 2, 0, PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.mfa_code_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string username = 1;
    {PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.username_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string password = 2;
    {PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.password_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string mfa_code = 3;
    {PROTOBUF_FIELD_OFFSET(LoginRequest, _impl_.mfa_code_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\35\10\10\10\0\0\0\0"
    "securecloud.auth.LoginRequest"
    "username"
    "password"
    "mfa_code"
  }},
};
PROTOBUF_NOINLINE void LoginRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.auth.LoginRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.username_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.password_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      _impl_.mfa_code_.ClearNonDefaultToEmpty();
    }
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LoginRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LoginRequest& this_ = static_cast<const LoginRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LoginRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LoginRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.auth.LoginRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string username = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_username().empty()) {
      const ::std::string& _s = this_._internal_username();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.auth.LoginRequest.username");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string password = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_password().empty()) {
      const ::std::string& _s = this_._internal_password();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.auth.LoginRequest.password");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // string mfa_code = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (!this_._internal_mfa_code().empty()) {
      const ::std::string& _s = this_._internal_mfa_code();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.auth.LoginRequest.mfa_code");
      target = stream->WriteStringMaybeAliased(3, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.auth.LoginRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LoginRequest::ByteSizeLong(const MessageLite& base) {
  const LoginRequest& this_ = static_cast<const LoginRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LoginRequest::ByteSizeLong() const {
  const LoginRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.auth.LoginRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string username = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_username().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_username());
      }
    }
    // string password = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_password().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_password());
      }
    }
    // string mfa_code = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!this_._internal_mfa_code().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_mfa_code());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LoginRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoginRequest*>(&to_msg);
  auto& from = static_cast<const LoginRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.auth.LoginRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_username().empty()) {
        _this->_internal_set_username(from._internal_username());
      } else {
        if (_this->_impl_.username_.IsDefault()) {
          _this->_internal_set_username("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_password().empty()) {
        _this->_internal_set_password(from._internal_password());
      } else {
        if (_this->_impl_.password_.IsDefault()) {
          _this->_internal_set_password("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (!from._internal_mfa_code().empty()) {
        _this->_internal_set_mfa_code(from._internal_mfa_code());
      } else {
        if (_this->_impl_.mfa_code_.IsDefault()) {
          _this->_internal_set_mfa_code("");
        }
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoginRequest::CopyFrom(const LoginRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.auth.LoginRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoginRequest::InternalSwap(LoginRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.username_, &other->_impl_.username_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.password_, &other->_impl_.password_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.mfa_code_, &other->_impl_.mfa_code_, arena);
}

::google::protobuf::Metadata LoginRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class LoginResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<LoginResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_._has_bits_);
};

LoginResponse::LoginResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LoginResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.auth.LoginResponse)
}
PROTOBUF_NDEBUG_INLINE LoginResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::securecloud::auth::LoginResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        access_token_(arena, from.access_token_),
        refresh_token_(arena, from.refresh_token_) {}

LoginResponse::LoginResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const LoginResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, LoginResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  LoginResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.expires_in_ = from._impl_.expires_in_;

  // @@protoc_insertion_point(copy_constructor:securecloud.auth.LoginResponse)
}
PROTOBUF_NDEBUG_INLINE LoginResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        access_token_(arena),
        refresh_token_(arena) {}

inline void LoginResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.expires_in_ = {};
}
LoginResponse::~LoginResponse() {
  // @@protoc_insertion_point(destructor:securecloud.auth.LoginResponse)
  SharedDtor(*this);
}
inline void LoginResponse::SharedDtor(MessageLite& self) {
  LoginResponse& this_ = static_cast<LoginResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.access_token_.Destroy();
  this_._impl_.refresh_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL LoginResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) LoginResponse(arena);
}
constexpr auto LoginResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(LoginResponse),
                                            alignof(LoginResponse));
}
constexpr auto LoginResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_LoginResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &LoginResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<LoginResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &LoginResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<LoginResponse>(), &LoginResponse::ByteSizeLong,
              &LoginResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_._cached_size_),
          false,
      },
      &LoginResponse::kDescriptorMethods,
      &descriptor_table_auth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull LoginResponse_class_data_ =
        LoginResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
LoginResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&LoginResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(LoginResponse_class_data_.tc_table);
  return LoginResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 64, 2>
LoginResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    LoginResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::auth::LoginResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string access_token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.access_token_)}},
    // string refresh_token = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 1, 0, PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.refresh_token_)}},
    // int64 expires_in = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(LoginResponse, _impl_.expires_in_), 2>(),
     {24, 2, 0, PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.expires_in_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string access_token = 1;
    {PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.access_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // string refresh_token = 2;
    {PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.refresh_token_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 expires_in = 3;
    {PROTOBUF_FIELD_OFFSET(LoginResponse, _impl_.expires_in_), _Internal::kHasBitsOffset + 2, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\36\14\15\0\0\0\0\0"
    "securecloud.auth.LoginResponse"
    "access_token"
    "refresh_token"
  }},
};
PROTOBUF_NOINLINE void LoginResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.auth.LoginResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      _impl_.access_token_.ClearNonDefaultToEmpty();
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      _impl_.refresh_token_.ClearNonDefaultToEmpty();
    }
  }
  _impl_.expires_in_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL LoginResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const LoginResponse& this_ = static_cast<const LoginResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL LoginResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const LoginResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.auth.LoginResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string access_token = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_access_token().empty()) {
      const ::std::string& _s = this_._internal_access_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.auth.LoginResponse.access_token");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // string refresh_token = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (!this_._internal_refresh_token().empty()) {
      const ::std::string& _s = this_._internal_refresh_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.auth.LoginResponse.refresh_token");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // int64 expires_in = 3;
  if ((this_._impl_._has_bits_[0] & 0x00000004U) != 0) {
    if (this_._internal_expires_in() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<3>(
              stream, this_._internal_expires_in(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.auth.LoginResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t LoginResponse::ByteSizeLong(const MessageLite& base) {
  const LoginResponse& this_ = static_cast<const LoginResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t LoginResponse::ByteSizeLong() const {
  const LoginResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.auth.LoginResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    // string access_token = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_access_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_access_token());
      }
    }
    // string refresh_token = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!this_._internal_refresh_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_refresh_token());
      }
    }
    // int64 expires_in = 3;
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (this_._internal_expires_in() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_expires_in());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void LoginResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<LoginResponse*>(&to_msg);
  auto& from = static_cast<const LoginResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.auth.LoginResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000007U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_access_token().empty()) {
        _this->_internal_set_access_token(from._internal_access_token());
      } else {
        if (_this->_impl_.access_token_.IsDefault()) {
          _this->_internal_set_access_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (!from._internal_refresh_token().empty()) {
        _this->_internal_set_refresh_token(from._internal_refresh_token());
      } else {
        if (_this->_impl_.refresh_token_.IsDefault()) {
          _this->_internal_set_refresh_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000004U) != 0) {
      if (from._internal_expires_in() != 0) {
        _this->_impl_.expires_in_ = from._impl_.expires_in_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void LoginResponse::CopyFrom(const LoginResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.auth.LoginResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void LoginResponse::InternalSwap(LoginResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.access_token_, &other->_impl_.access_token_, arena);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.refresh_token_, &other->_impl_.refresh_token_, arena);
  swap(_impl_.expires_in_, other->_impl_.expires_in_);
}

::google::protobuf::Metadata LoginResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RefreshTokenRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RefreshTokenRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RefreshTokenRequest, _impl_._has_bits_);
};

RefreshTokenRequest::RefreshTokenRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RefreshTokenRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.auth.RefreshTokenRequest)
}
PROTOBUF_NDEBUG_INLINE RefreshTokenRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::securecloud::auth::RefreshTokenRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        refresh_token_(arena, from.refresh_token_) {}

RefreshTokenRequest::RefreshTokenRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RefreshTokenRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RefreshTokenRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RefreshTokenRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:securecloud.auth.RefreshTokenRequest)
}
PROTOBUF_NDEBUG_INLINE RefreshTokenRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        refresh_token_(arena) {}

inline void RefreshTokenRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RefreshTokenRequest::~RefreshTokenRequest() {
  // @@protoc_insertion_point(destructor:securecloud.auth.RefreshTokenRequest)
  SharedDtor(*this);
}
inline void RefreshTokenRequest::SharedDtor(MessageLite& self) {
  RefreshTokenRequest& this_ = static_cast<RefreshTokenRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.refresh_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RefreshTokenRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RefreshTokenRequest(arena);
}
constexpr auto RefreshTokenRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RefreshTokenRequest),
                                            alignof(RefreshTokenRequest));
}
constexpr auto RefreshTokenRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RefreshTokenRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RefreshTokenRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RefreshTokenRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RefreshTokenRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RefreshTokenRequest>(), &RefreshTokenRequest::ByteSizeLong,
              &RefreshTokenRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RefreshTokenRequest, _impl_._cached_size_),
          false,
      },
      &RefreshTokenRequest::kDescriptorMethods,
      &descriptor_table_auth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RefreshTokenRequest_class_data_ =
        RefreshTokenRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RefreshTokenRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RefreshTokenRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RefreshTokenRequest_class_data_.tc_table);
  return RefreshTokenRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2>
RefreshTokenRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RefreshTokenRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RefreshTokenRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::auth::RefreshTokenRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string refresh_token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RefreshTokenRequest, _impl_.refresh_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string refresh_token = 1;
    {PROTOBUF_FIELD_OFFSET(RefreshTokenRequest, _impl_.refresh_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\15\0\0\0\0\0\0"
    "securecloud.auth.RefreshTokenRequest"
    "refresh_token"
  }},
};
PROTOBUF_NOINLINE void RefreshTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.auth.RefreshTokenRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.refresh_token_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RefreshTokenRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RefreshTokenRequest& this_ = static_cast<const RefreshTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RefreshTokenRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RefreshTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.auth.RefreshTokenRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string refresh_token = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_refresh_token().empty()) {
      const ::std::string& _s = this_._internal_refresh_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.auth.RefreshTokenRequest.refresh_token");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.auth.RefreshTokenRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RefreshTokenRequest::ByteSizeLong(const MessageLite& base) {
  const RefreshTokenRequest& this_ = static_cast<const RefreshTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RefreshTokenRequest::ByteSizeLong() const {
  const RefreshTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.auth.RefreshTokenRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string refresh_token = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_refresh_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_refresh_token());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RefreshTokenRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RefreshTokenRequest*>(&to_msg);
  auto& from = static_cast<const RefreshTokenRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.auth.RefreshTokenRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_refresh_token().empty()) {
      _this->_internal_set_refresh_token(from._internal_refresh_token());
    } else {
      if (_this->_impl_.refresh_token_.IsDefault()) {
        _this->_internal_set_refresh_token("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshTokenRequest::CopyFrom(const RefreshTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.auth.RefreshTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RefreshTokenRequest::InternalSwap(RefreshTokenRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.refresh_token_, &other->_impl_.refresh_token_, arena);
}

::google::protobuf::Metadata RefreshTokenRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RefreshTokenResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RefreshTokenResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RefreshTokenResponse, _impl_._has_bits_);
};

RefreshTokenResponse::RefreshTokenResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RefreshTokenResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.auth.RefreshTokenResponse)
}
PROTOBUF_NDEBUG_INLINE RefreshTokenResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::securecloud::auth::RefreshTokenResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        access_token_(arena, from.access_token_) {}

RefreshTokenResponse::RefreshTokenResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RefreshTokenResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RefreshTokenResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RefreshTokenResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.expires_in_ = from._impl_.expires_in_;

  // @@protoc_insertion_point(copy_constructor:securecloud.auth.RefreshTokenResponse)
}
PROTOBUF_NDEBUG_INLINE RefreshTokenResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        access_token_(arena) {}

inline void RefreshTokenResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.expires_in_ = {};
}
RefreshTokenResponse::~RefreshTokenResponse() {
  // @@protoc_insertion_point(destructor:securecloud.auth.RefreshTokenResponse)
  SharedDtor(*this);
}
inline void RefreshTokenResponse::SharedDtor(MessageLite& self) {
  RefreshTokenResponse& this_ = static_cast<RefreshTokenResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.access_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RefreshTokenResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RefreshTokenResponse(arena);
}
constexpr auto RefreshTokenResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RefreshTokenResponse),
                                            alignof(RefreshTokenResponse));
}
constexpr auto RefreshTokenResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RefreshTokenResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RefreshTokenResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RefreshTokenResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RefreshTokenResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RefreshTokenResponse>(), &RefreshTokenResponse::ByteSizeLong,
              &RefreshTokenResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RefreshTokenResponse, _impl_._cached_size_),
          false,
      },
      &RefreshTokenResponse::kDescriptorMethods,
      &descriptor_table_auth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RefreshTokenResponse_class_data_ =
        RefreshTokenResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RefreshTokenResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RefreshTokenResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RefreshTokenResponse_class_data_.tc_table);
  return RefreshTokenResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 58, 2>
RefreshTokenResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RefreshTokenResponse, _impl_._has_bits_),
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RefreshTokenResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::auth::RefreshTokenResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int64 expires_in = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint64_t, offsetof(RefreshTokenResponse, _impl_.expires_in_), 1>(),
     {16, 1, 0, PROTOBUF_FIELD_OFFSET(RefreshTokenResponse, _impl_.expires_in_)}},
    // string access_token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RefreshTokenResponse, _impl_.access_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string access_token = 1;
    {PROTOBUF_FIELD_OFFSET(RefreshTokenResponse, _impl_.access_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int64 expires_in = 2;
    {PROTOBUF_FIELD_OFFSET(RefreshTokenResponse, _impl_.expires_in_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kInt64)},
  }},
  // no aux_entries
  {{
    "\45\14\0\0\0\0\0\0"
    "securecloud.auth.RefreshTokenResponse"
    "access_token"
  }},
};
PROTOBUF_NOINLINE void RefreshTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.auth.RefreshTokenResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.access_token_.ClearNonDefaultToEmpty();
  }
  _impl_.expires_in_ = ::int64_t{0};
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RefreshTokenResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RefreshTokenResponse& this_ = static_cast<const RefreshTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RefreshTokenResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RefreshTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.auth.RefreshTokenResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string access_token = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_access_token().empty()) {
      const ::std::string& _s = this_._internal_access_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.auth.RefreshTokenResponse.access_token");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  // int64 expires_in = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_expires_in() != 0) {
      target =
          ::google::protobuf::internal::WireFormatLite::WriteInt64ToArrayWithField<2>(
              stream, this_._internal_expires_in(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.auth.RefreshTokenResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RefreshTokenResponse::ByteSizeLong(const MessageLite& base) {
  const RefreshTokenResponse& this_ = static_cast<const RefreshTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RefreshTokenResponse::ByteSizeLong() const {
  const RefreshTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.auth.RefreshTokenResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string access_token = 1;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_access_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_access_token());
      }
    }
    // int64 expires_in = 2;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_expires_in() != 0) {
        total_size += ::_pbi::WireFormatLite::Int64SizePlusOne(
            this_._internal_expires_in());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RefreshTokenResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RefreshTokenResponse*>(&to_msg);
  auto& from = static_cast<const RefreshTokenResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.auth.RefreshTokenResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_access_token().empty()) {
        _this->_internal_set_access_token(from._internal_access_token());
      } else {
        if (_this->_impl_.access_token_.IsDefault()) {
          _this->_internal_set_access_token("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_expires_in() != 0) {
        _this->_impl_.expires_in_ = from._impl_.expires_in_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RefreshTokenResponse::CopyFrom(const RefreshTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.auth.RefreshTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RefreshTokenResponse::InternalSwap(RefreshTokenResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.access_token_, &other->_impl_.access_token_, arena);
  swap(_impl_.expires_in_, other->_impl_.expires_in_);
}

::google::protobuf::Metadata RefreshTokenResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidateTokenRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidateTokenRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidateTokenRequest, _impl_._has_bits_);
};

ValidateTokenRequest::ValidateTokenRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateTokenRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.auth.ValidateTokenRequest)
}
PROTOBUF_NDEBUG_INLINE ValidateTokenRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::securecloud::auth::ValidateTokenRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        access_token_(arena, from.access_token_) {}

ValidateTokenRequest::ValidateTokenRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidateTokenRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateTokenRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateTokenRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:securecloud.auth.ValidateTokenRequest)
}
PROTOBUF_NDEBUG_INLINE ValidateTokenRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        access_token_(arena) {}

inline void ValidateTokenRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
ValidateTokenRequest::~ValidateTokenRequest() {
  // @@protoc_insertion_point(destructor:securecloud.auth.ValidateTokenRequest)
  SharedDtor(*this);
}
inline void ValidateTokenRequest::SharedDtor(MessageLite& self) {
  ValidateTokenRequest& this_ = static_cast<ValidateTokenRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.access_token_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidateTokenRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidateTokenRequest(arena);
}
constexpr auto ValidateTokenRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(ValidateTokenRequest),
                                            alignof(ValidateTokenRequest));
}
constexpr auto ValidateTokenRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidateTokenRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidateTokenRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidateTokenRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidateTokenRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidateTokenRequest>(), &ValidateTokenRequest::ByteSizeLong,
              &ValidateTokenRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidateTokenRequest, _impl_._cached_size_),
          false,
      },
      &ValidateTokenRequest::kDescriptorMethods,
      &descriptor_table_auth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidateTokenRequest_class_data_ =
        ValidateTokenRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidateTokenRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidateTokenRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidateTokenRequest_class_data_.tc_table);
  return ValidateTokenRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 58, 2>
ValidateTokenRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateTokenRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ValidateTokenRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::auth::ValidateTokenRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string access_token = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(ValidateTokenRequest, _impl_.access_token_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string access_token = 1;
    {PROTOBUF_FIELD_OFFSET(ValidateTokenRequest, _impl_.access_token_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\45\14\0\0\0\0\0\0"
    "securecloud.auth.ValidateTokenRequest"
    "access_token"
  }},
};
PROTOBUF_NOINLINE void ValidateTokenRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.auth.ValidateTokenRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.access_token_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidateTokenRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidateTokenRequest& this_ = static_cast<const ValidateTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidateTokenRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidateTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.auth.ValidateTokenRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string access_token = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_access_token().empty()) {
      const ::std::string& _s = this_._internal_access_token();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.auth.ValidateTokenRequest.access_token");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.auth.ValidateTokenRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidateTokenRequest::ByteSizeLong(const MessageLite& base) {
  const ValidateTokenRequest& this_ = static_cast<const ValidateTokenRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidateTokenRequest::ByteSizeLong() const {
  const ValidateTokenRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.auth.ValidateTokenRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string access_token = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_access_token().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_access_token());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidateTokenRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateTokenRequest*>(&to_msg);
  auto& from = static_cast<const ValidateTokenRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.auth.ValidateTokenRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_access_token().empty()) {
      _this->_internal_set_access_token(from._internal_access_token());
    } else {
      if (_this->_impl_.access_token_.IsDefault()) {
        _this->_internal_set_access_token("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateTokenRequest::CopyFrom(const ValidateTokenRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.auth.ValidateTokenRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateTokenRequest::InternalSwap(ValidateTokenRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.access_token_, &other->_impl_.access_token_, arena);
}

::google::protobuf::Metadata ValidateTokenRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class ValidateTokenResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<ValidateTokenResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(ValidateTokenResponse, _impl_._has_bits_);
};

ValidateTokenResponse::ValidateTokenResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateTokenResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.auth.ValidateTokenResponse)
}
PROTOBUF_NDEBUG_INLINE ValidateTokenResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::securecloud::auth::ValidateTokenResponse& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        permissions_{visibility, arena, from.permissions_},
        user_id_(arena, from.user_id_) {}

ValidateTokenResponse::ValidateTokenResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const ValidateTokenResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, ValidateTokenResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  ValidateTokenResponse* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.valid_ = from._impl_.valid_;

  // @@protoc_insertion_point(copy_constructor:securecloud.auth.ValidateTokenResponse)
}
PROTOBUF_NDEBUG_INLINE ValidateTokenResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        permissions_{visibility, arena},
        user_id_(arena) {}

inline void ValidateTokenResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.valid_ = {};
}
ValidateTokenResponse::~ValidateTokenResponse() {
  // @@protoc_insertion_point(destructor:securecloud.auth.ValidateTokenResponse)
  SharedDtor(*this);
}
inline void ValidateTokenResponse::SharedDtor(MessageLite& self) {
  ValidateTokenResponse& this_ = static_cast<ValidateTokenResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL ValidateTokenResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) ValidateTokenResponse(arena);
}
constexpr auto ValidateTokenResponse::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(ValidateTokenResponse, _impl_.permissions_) +
          decltype(ValidateTokenResponse::_impl_.permissions_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::CopyInit(
        sizeof(ValidateTokenResponse), alignof(ValidateTokenResponse), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&ValidateTokenResponse::PlacementNew_,
                                 sizeof(ValidateTokenResponse),
                                 alignof(ValidateTokenResponse));
  }
}
constexpr auto ValidateTokenResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_ValidateTokenResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &ValidateTokenResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<ValidateTokenResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &ValidateTokenResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<ValidateTokenResponse>(), &ValidateTokenResponse::ByteSizeLong,
              &ValidateTokenResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(ValidateTokenResponse, _impl_._cached_size_),
          false,
      },
      &ValidateTokenResponse::kDescriptorMethods,
      &descriptor_table_auth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull ValidateTokenResponse_class_data_ =
        ValidateTokenResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
ValidateTokenResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&ValidateTokenResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(ValidateTokenResponse_class_data_.tc_table);
  return ValidateTokenResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 65, 2>
ValidateTokenResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(ValidateTokenResponse, _impl_._has_bits_),
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    ValidateTokenResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::auth::ValidateTokenResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // bool valid = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(ValidateTokenResponse, _impl_.valid_), 1>(),
     {8, 1, 0, PROTOBUF_FIELD_OFFSET(ValidateTokenResponse, _impl_.valid_)}},
    // string user_id = 2;
    {::_pbi::TcParser::FastUS1,
     {18, 0, 0, PROTOBUF_FIELD_OFFSET(ValidateTokenResponse, _impl_.user_id_)}},
    // repeated string permissions = 3;
    {::_pbi::TcParser::FastUR1,
     {26, 63, 0, PROTOBUF_FIELD_OFFSET(ValidateTokenResponse, _impl_.permissions_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool valid = 1;
    {PROTOBUF_FIELD_OFFSET(ValidateTokenResponse, _impl_.valid_), _Internal::kHasBitsOffset + 1, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
    // string user_id = 2;
    {PROTOBUF_FIELD_OFFSET(ValidateTokenResponse, _impl_.user_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // repeated string permissions = 3;
    {PROTOBUF_FIELD_OFFSET(ValidateTokenResponse, _impl_.permissions_), -1, 0, (0 | ::_fl::kFcRepeated | ::_fl::kUtf8String | ::_fl::kRepSString)},
  }},
  // no aux_entries
  {{
    "\46\0\7\13\0\0\0\0"
    "securecloud.auth.ValidateTokenResponse"
    "user_id"
    "permissions"
  }},
};
PROTOBUF_NOINLINE void ValidateTokenResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.auth.ValidateTokenResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.permissions_.Clear();
  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.user_id_.ClearNonDefaultToEmpty();
  }
  _impl_.valid_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL ValidateTokenResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const ValidateTokenResponse& this_ = static_cast<const ValidateTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL ValidateTokenResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const ValidateTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.auth.ValidateTokenResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool valid = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000002U) != 0) {
    if (this_._internal_valid() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_valid(), target);
    }
  }

  // string user_id = 2;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_user_id().empty()) {
      const ::std::string& _s = this_._internal_user_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.auth.ValidateTokenResponse.user_id");
      target = stream->WriteStringMaybeAliased(2, _s, target);
    }
  }

  // repeated string permissions = 3;
  for (int i = 0, n = this_._internal_permissions_size(); i < n; ++i) {
    const auto& s = this_._internal_permissions().Get(i);
    ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
        s.data(), static_cast<int>(s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.auth.ValidateTokenResponse.permissions");
    target = stream->WriteString(3, s, target);
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.auth.ValidateTokenResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t ValidateTokenResponse::ByteSizeLong(const MessageLite& base) {
  const ValidateTokenResponse& this_ = static_cast<const ValidateTokenResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t ValidateTokenResponse::ByteSizeLong() const {
  const ValidateTokenResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.auth.ValidateTokenResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

  ::_pbi::Prefetch5LinesFrom7Lines(&this_);
   {
    // repeated string permissions = 3;
    {
      total_size +=
          1 * ::google::protobuf::internal::FromIntSize(this_._internal_permissions().size());
      for (int i = 0, n = this_._internal_permissions().size(); i < n; ++i) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
            this_._internal_permissions().Get(i));
      }
    }
  }
  cached_has_bits = this_._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    // string user_id = 2;
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_user_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_id());
      }
    }
    // bool valid = 1;
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (this_._internal_valid() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void ValidateTokenResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<ValidateTokenResponse*>(&to_msg);
  auto& from = static_cast<const ValidateTokenResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.auth.ValidateTokenResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_permissions()->MergeFrom(from._internal_permissions());
  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000003U) != 0) {
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!from._internal_user_id().empty()) {
        _this->_internal_set_user_id(from._internal_user_id());
      } else {
        if (_this->_impl_.user_id_.IsDefault()) {
          _this->_internal_set_user_id("");
        }
      }
    }
    if ((cached_has_bits & 0x00000002U) != 0) {
      if (from._internal_valid() != 0) {
        _this->_impl_.valid_ = from._impl_.valid_;
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void ValidateTokenResponse::CopyFrom(const ValidateTokenResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.auth.ValidateTokenResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void ValidateTokenResponse::InternalSwap(ValidateTokenResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  _impl_.permissions_.InternalSwap(&other->_impl_.permissions_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  swap(_impl_.valid_, other->_impl_.valid_);
}

::google::protobuf::Metadata ValidateTokenResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RevokeTokensRequest::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RevokeTokensRequest>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RevokeTokensRequest, _impl_._has_bits_);
};

RevokeTokensRequest::RevokeTokensRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RevokeTokensRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.auth.RevokeTokensRequest)
}
PROTOBUF_NDEBUG_INLINE RevokeTokensRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
    [[maybe_unused]] const ::securecloud::auth::RevokeTokensRequest& from_msg)
      : _has_bits_{from._has_bits_},
        _cached_size_{0},
        user_id_(arena, from.user_id_) {}

RevokeTokensRequest::RevokeTokensRequest(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena,
    const RevokeTokensRequest& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RevokeTokensRequest_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  RevokeTokensRequest* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:securecloud.auth.RevokeTokensRequest)
}
PROTOBUF_NDEBUG_INLINE RevokeTokensRequest::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0},
        user_id_(arena) {}

inline void RevokeTokensRequest::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
RevokeTokensRequest::~RevokeTokensRequest() {
  // @@protoc_insertion_point(destructor:securecloud.auth.RevokeTokensRequest)
  SharedDtor(*this);
}
inline void RevokeTokensRequest::SharedDtor(MessageLite& self) {
  RevokeTokensRequest& this_ = static_cast<RevokeTokensRequest&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RevokeTokensRequest::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RevokeTokensRequest(arena);
}
constexpr auto RevokeTokensRequest::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(RevokeTokensRequest),
                                            alignof(RevokeTokensRequest));
}
constexpr auto RevokeTokensRequest::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RevokeTokensRequest_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RevokeTokensRequest::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RevokeTokensRequest>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RevokeTokensRequest::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RevokeTokensRequest>(), &RevokeTokensRequest::ByteSizeLong,
              &RevokeTokensRequest::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RevokeTokensRequest, _impl_._cached_size_),
          false,
      },
      &RevokeTokensRequest::kDescriptorMethods,
      &descriptor_table_auth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RevokeTokensRequest_class_data_ =
        RevokeTokensRequest::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RevokeTokensRequest::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RevokeTokensRequest_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RevokeTokensRequest_class_data_.tc_table);
  return RevokeTokensRequest_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 52, 2>
RevokeTokensRequest::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RevokeTokensRequest, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RevokeTokensRequest_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::auth::RevokeTokensRequest>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 0, 0, PROTOBUF_FIELD_OFFSET(RevokeTokensRequest, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(RevokeTokensRequest, _impl_.user_id_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kUtf8String | ::_fl::kRepAString)},
  }},
  // no aux_entries
  {{
    "\44\7\0\0\0\0\0\0"
    "securecloud.auth.RevokeTokensRequest"
    "user_id"
  }},
};
PROTOBUF_NOINLINE void RevokeTokensRequest::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.auth.RevokeTokensRequest)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  cached_has_bits = _impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    _impl_.user_id_.ClearNonDefaultToEmpty();
  }
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RevokeTokensRequest::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RevokeTokensRequest& this_ = static_cast<const RevokeTokensRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RevokeTokensRequest::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RevokeTokensRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.auth.RevokeTokensRequest)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // string user_id = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (!this_._internal_user_id().empty()) {
      const ::std::string& _s = this_._internal_user_id();
      ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
          _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "securecloud.auth.RevokeTokensRequest.user_id");
      target = stream->WriteStringMaybeAliased(1, _s, target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.auth.RevokeTokensRequest)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RevokeTokensRequest::ByteSizeLong(const MessageLite& base) {
  const RevokeTokensRequest& this_ = static_cast<const RevokeTokensRequest&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RevokeTokensRequest::ByteSizeLong() const {
  const RevokeTokensRequest& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.auth.RevokeTokensRequest)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // string user_id = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (!this_._internal_user_id().empty()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                        this_._internal_user_id());
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RevokeTokensRequest::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RevokeTokensRequest*>(&to_msg);
  auto& from = static_cast<const RevokeTokensRequest&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.auth.RevokeTokensRequest)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (!from._internal_user_id().empty()) {
      _this->_internal_set_user_id(from._internal_user_id());
    } else {
      if (_this->_impl_.user_id_.IsDefault()) {
        _this->_internal_set_user_id("");
      }
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RevokeTokensRequest::CopyFrom(const RevokeTokensRequest& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.auth.RevokeTokensRequest)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RevokeTokensRequest::InternalSwap(RevokeTokensRequest* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
}

::google::protobuf::Metadata RevokeTokensRequest::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class RevokeTokensResponse::_Internal {
 public:
  using HasBits =
      decltype(::std::declval<RevokeTokensResponse>()._impl_._has_bits_);
  static constexpr ::int32_t kHasBitsOffset =
      8 * PROTOBUF_FIELD_OFFSET(RevokeTokensResponse, _impl_._has_bits_);
};

RevokeTokensResponse::RevokeTokensResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RevokeTokensResponse_class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:securecloud.auth.RevokeTokensResponse)
}
RevokeTokensResponse::RevokeTokensResponse(
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RevokeTokensResponse& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, RevokeTokensResponse_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(from._impl_) {
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
}
PROTOBUF_NDEBUG_INLINE RevokeTokensResponse::Impl_::Impl_(
    [[maybe_unused]] ::google::protobuf::internal::InternalVisibility visibility,
    [[maybe_unused]] ::google::protobuf::Arena* PROTOBUF_NULLABLE arena)
      : _cached_size_{0} {}

inline void RevokeTokensResponse::SharedCtor(::_pb::Arena* PROTOBUF_NULLABLE arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.success_ = {};
}
RevokeTokensResponse::~RevokeTokensResponse() {
  // @@protoc_insertion_point(destructor:securecloud.auth.RevokeTokensResponse)
  SharedDtor(*this);
}
inline void RevokeTokensResponse::SharedDtor(MessageLite& self) {
  RevokeTokensResponse& this_ = static_cast<RevokeTokensResponse&>(self);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* PROTOBUF_NONNULL RevokeTokensResponse::PlacementNew_(
    const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
    ::google::protobuf::Arena* PROTOBUF_NULLABLE arena) {
  return ::new (mem) RevokeTokensResponse(arena);
}
constexpr auto RevokeTokensResponse::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(RevokeTokensResponse),
                                            alignof(RevokeTokensResponse));
}
constexpr auto RevokeTokensResponse::InternalGenerateClassData_() {
  return ::google::protobuf::internal::ClassDataFull{
      ::google::protobuf::internal::ClassData{
          &_RevokeTokensResponse_default_instance_._instance,
          &_table_.header,
          nullptr,  // OnDemandRegisterArenaDtor
          nullptr,  // IsInitialized
          &RevokeTokensResponse::MergeImpl,
          ::google::protobuf::Message::GetNewImpl<RevokeTokensResponse>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
          &RevokeTokensResponse::SharedDtor,
          ::google::protobuf::Message::GetClearImpl<RevokeTokensResponse>(), &RevokeTokensResponse::ByteSizeLong,
              &RevokeTokensResponse::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
          PROTOBUF_FIELD_OFFSET(RevokeTokensResponse, _impl_._cached_size_),
          false,
      },
      &RevokeTokensResponse::kDescriptorMethods,
      &descriptor_table_auth_2eproto,
      nullptr,  // tracker
  };
}

PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 const
    ::google::protobuf::internal::ClassDataFull RevokeTokensResponse_class_data_ =
        RevokeTokensResponse::InternalGenerateClassData_();

PROTOBUF_ATTRIBUTE_WEAK const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL
RevokeTokensResponse::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&RevokeTokensResponse_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(RevokeTokensResponse_class_data_.tc_table);
  return RevokeTokensResponse_class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 0, 0, 2>
RevokeTokensResponse::_table_ = {
  {
    PROTOBUF_FIELD_OFFSET(RevokeTokensResponse, _impl_._has_bits_),
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    RevokeTokensResponse_class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::securecloud::auth::RevokeTokensResponse>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // bool success = 1;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(RevokeTokensResponse, _impl_.success_), 0>(),
     {8, 0, 0, PROTOBUF_FIELD_OFFSET(RevokeTokensResponse, _impl_.success_)}},
  }}, {{
    65535, 65535
  }}, {{
    // bool success = 1;
    {PROTOBUF_FIELD_OFFSET(RevokeTokensResponse, _impl_.success_), _Internal::kHasBitsOffset + 0, 0, (0 | ::_fl::kFcOptional | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
  }},
};
PROTOBUF_NOINLINE void RevokeTokensResponse::Clear() {
// @@protoc_insertion_point(message_clear_start:securecloud.auth.RevokeTokensResponse)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.success_ = false;
  _impl_._has_bits_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::uint8_t* PROTOBUF_NONNULL RevokeTokensResponse::_InternalSerialize(
    const ::google::protobuf::MessageLite& base, ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) {
  const RevokeTokensResponse& this_ = static_cast<const RevokeTokensResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::uint8_t* PROTOBUF_NONNULL RevokeTokensResponse::_InternalSerialize(
    ::uint8_t* PROTOBUF_NONNULL target,
    ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
  const RevokeTokensResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    this_.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(serialize_to_array_start:securecloud.auth.RevokeTokensResponse)
  ::uint32_t cached_has_bits = 0;
  (void)cached_has_bits;

  // bool success = 1;
  if ((this_._impl_._has_bits_[0] & 0x00000001U) != 0) {
    if (this_._internal_success() != 0) {
      target = stream->EnsureSpace(target);
      target = ::_pbi::WireFormatLite::WriteBoolToArray(
          1, this_._internal_success(), target);
    }
  }

  if (ABSL_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
    target =
        ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
            this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
  }
  // @@protoc_insertion_point(serialize_to_array_end:securecloud.auth.RevokeTokensResponse)
  return target;
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
::size_t RevokeTokensResponse::ByteSizeLong(const MessageLite& base) {
  const RevokeTokensResponse& this_ = static_cast<const RevokeTokensResponse&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
::size_t RevokeTokensResponse::ByteSizeLong() const {
  const RevokeTokensResponse& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
  // @@protoc_insertion_point(message_byte_size_start:securecloud.auth.RevokeTokensResponse)
  ::size_t total_size = 0;

  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void)cached_has_bits;

   {
    // bool success = 1;
    cached_has_bits = this_._impl_._has_bits_[0];
    if ((cached_has_bits & 0x00000001U) != 0) {
      if (this_._internal_success() != 0) {
        total_size += 2;
      }
    }
  }
  return this_.MaybeComputeUnknownFieldsSize(total_size,
                                             &this_._impl_._cached_size_);
}

void RevokeTokensResponse::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<RevokeTokensResponse*>(&to_msg);
  auto& from = static_cast<const RevokeTokensResponse&>(from_msg);
  if constexpr (::_pbi::DebugHardenVerifyHasBitConsistency()) {
    from.VerifyHasBitConsistency();
  }
  // @@protoc_insertion_point(class_specific_merge_from_start:securecloud.auth.RevokeTokensResponse)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._impl_._has_bits_[0];
  if ((cached_has_bits & 0x00000001U) != 0) {
    if (from._internal_success() != 0) {
      _this->_impl_.success_ = from._impl_.success_;
    }
  }
  _this->_impl_._has_bits_[0] |= cached_has_bits;
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void RevokeTokensResponse::CopyFrom(const RevokeTokensResponse& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:securecloud.auth.RevokeTokensResponse)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void RevokeTokensResponse::InternalSwap(RevokeTokensResponse* PROTOBUF_RESTRICT PROTOBUF_NONNULL other) {
  using ::std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_._has_bits_[0], other->_impl_._has_bits_[0]);
  swap(_impl_.success_, other->_impl_.success_);
}

::google::protobuf::Metadata RevokeTokensResponse::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace auth
}  // namespace securecloud
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ [[maybe_unused]] =
        (::_pbi::AddDescriptors(&descriptor_table_auth_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
