// Generated by the gRPC C++ plugin.
// If you make any local change, they will be lost.
// source: auth.proto
#ifndef GRPC_auth_2eproto__INCLUDED
#define GRPC_auth_2eproto__INCLUDED

#include "auth.pb.h"

#include <functional>
#include <grpcpp/generic/async_generic_service.h>
#include <grpcpp/support/async_stream.h>
#include <grpcpp/support/async_unary_call.h>
#include <grpcpp/support/client_callback.h>
#include <grpcpp/client_context.h>
#include <grpcpp/completion_queue.h>
#include <grpcpp/support/message_allocator.h>
#include <grpcpp/support/method_handler.h>
#include <grpcpp/impl/proto_utils.h>
#include <grpcpp/impl/rpc_method.h>
#include <grpcpp/support/server_callback.h>
#include <grpcpp/impl/server_callback_handlers.h>
#include <grpcpp/server_context.h>
#include <grpcpp/impl/service_type.h>
#include <grpcpp/support/status.h>
#include <grpcpp/support/stub_options.h>
#include <grpcpp/support/sync_stream.h>
#include <grpcpp/ports_def.inc>

namespace securecloud {
namespace auth {

// Service d'authentification
class AuthService final {
 public:
  static constexpr char const* service_full_name() {
    return "securecloud.auth.AuthService";
  }
  class StubInterface {
   public:
    virtual ~StubInterface() {}
    virtual ::grpc::Status Login(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest& request, ::securecloud::auth::LoginResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::LoginResponse>> AsyncLogin(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::LoginResponse>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::LoginResponse>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::LoginResponse>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    virtual ::grpc::Status RefreshToken(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest& request, ::securecloud::auth::RefreshTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RefreshTokenResponse>> AsyncRefreshToken(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RefreshTokenResponse>>(AsyncRefreshTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RefreshTokenResponse>> PrepareAsyncRefreshToken(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RefreshTokenResponse>>(PrepareAsyncRefreshTokenRaw(context, request, cq));
    }
    virtual ::grpc::Status ValidateToken(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest& request, ::securecloud::auth::ValidateTokenResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::ValidateTokenResponse>> AsyncValidateToken(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::ValidateTokenResponse>>(AsyncValidateTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::ValidateTokenResponse>> PrepareAsyncValidateToken(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::ValidateTokenResponse>>(PrepareAsyncValidateTokenRaw(context, request, cq));
    }
    virtual ::grpc::Status RevokeTokens(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest& request, ::securecloud::auth::RevokeTokensResponse* response) = 0;
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RevokeTokensResponse>> AsyncRevokeTokens(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RevokeTokensResponse>>(AsyncRevokeTokensRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RevokeTokensResponse>> PrepareAsyncRevokeTokens(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RevokeTokensResponse>>(PrepareAsyncRevokeTokensRaw(context, request, cq));
    }
    class async_interface {
     public:
      virtual ~async_interface() {}
      virtual void Login(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest* request, ::securecloud::auth::LoginResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void Login(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest* request, ::securecloud::auth::LoginResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RefreshToken(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest* request, ::securecloud::auth::RefreshTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RefreshToken(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest* request, ::securecloud::auth::RefreshTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void ValidateToken(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest* request, ::securecloud::auth::ValidateTokenResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void ValidateToken(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest* request, ::securecloud::auth::ValidateTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
      virtual void RevokeTokens(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest* request, ::securecloud::auth::RevokeTokensResponse* response, std::function<void(::grpc::Status)>) = 0;
      virtual void RevokeTokens(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest* request, ::securecloud::auth::RevokeTokensResponse* response, ::grpc::ClientUnaryReactor* reactor) = 0;
    };
    typedef class async_interface experimental_async_interface;
    virtual class async_interface* async() { return nullptr; }
    class async_interface* experimental_async() { return async(); }
   private:
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::LoginResponse>* AsyncLoginRaw(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::LoginResponse>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RefreshTokenResponse>* AsyncRefreshTokenRaw(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RefreshTokenResponse>* PrepareAsyncRefreshTokenRaw(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::ValidateTokenResponse>* AsyncValidateTokenRaw(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::ValidateTokenResponse>* PrepareAsyncValidateTokenRaw(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RevokeTokensResponse>* AsyncRevokeTokensRaw(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest& request, ::grpc::CompletionQueue* cq) = 0;
    virtual ::grpc::ClientAsyncResponseReaderInterface< ::securecloud::auth::RevokeTokensResponse>* PrepareAsyncRevokeTokensRaw(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest& request, ::grpc::CompletionQueue* cq) = 0;
  };
  class Stub final : public StubInterface {
   public:
    Stub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());
    ::grpc::Status Login(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest& request, ::securecloud::auth::LoginResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::LoginResponse>> AsyncLogin(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::LoginResponse>>(AsyncLoginRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::LoginResponse>> PrepareAsyncLogin(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::LoginResponse>>(PrepareAsyncLoginRaw(context, request, cq));
    }
    ::grpc::Status RefreshToken(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest& request, ::securecloud::auth::RefreshTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RefreshTokenResponse>> AsyncRefreshToken(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RefreshTokenResponse>>(AsyncRefreshTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RefreshTokenResponse>> PrepareAsyncRefreshToken(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RefreshTokenResponse>>(PrepareAsyncRefreshTokenRaw(context, request, cq));
    }
    ::grpc::Status ValidateToken(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest& request, ::securecloud::auth::ValidateTokenResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::ValidateTokenResponse>> AsyncValidateToken(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::ValidateTokenResponse>>(AsyncValidateTokenRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::ValidateTokenResponse>> PrepareAsyncValidateToken(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::ValidateTokenResponse>>(PrepareAsyncValidateTokenRaw(context, request, cq));
    }
    ::grpc::Status RevokeTokens(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest& request, ::securecloud::auth::RevokeTokensResponse* response) override;
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RevokeTokensResponse>> AsyncRevokeTokens(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RevokeTokensResponse>>(AsyncRevokeTokensRaw(context, request, cq));
    }
    std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RevokeTokensResponse>> PrepareAsyncRevokeTokens(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest& request, ::grpc::CompletionQueue* cq) {
      return std::unique_ptr< ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RevokeTokensResponse>>(PrepareAsyncRevokeTokensRaw(context, request, cq));
    }
    class async final :
      public StubInterface::async_interface {
     public:
      void Login(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest* request, ::securecloud::auth::LoginResponse* response, std::function<void(::grpc::Status)>) override;
      void Login(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest* request, ::securecloud::auth::LoginResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RefreshToken(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest* request, ::securecloud::auth::RefreshTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void RefreshToken(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest* request, ::securecloud::auth::RefreshTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void ValidateToken(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest* request, ::securecloud::auth::ValidateTokenResponse* response, std::function<void(::grpc::Status)>) override;
      void ValidateToken(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest* request, ::securecloud::auth::ValidateTokenResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
      void RevokeTokens(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest* request, ::securecloud::auth::RevokeTokensResponse* response, std::function<void(::grpc::Status)>) override;
      void RevokeTokens(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest* request, ::securecloud::auth::RevokeTokensResponse* response, ::grpc::ClientUnaryReactor* reactor) override;
     private:
      friend class Stub;
      explicit async(Stub* stub): stub_(stub) { }
      Stub* stub() { return stub_; }
      Stub* stub_;
    };
    class async* async() override { return &async_stub_; }

   private:
    std::shared_ptr< ::grpc::ChannelInterface> channel_;
    class async async_stub_{this};
    ::grpc::ClientAsyncResponseReader< ::securecloud::auth::LoginResponse>* AsyncLoginRaw(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::securecloud::auth::LoginResponse>* PrepareAsyncLoginRaw(::grpc::ClientContext* context, const ::securecloud::auth::LoginRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RefreshTokenResponse>* AsyncRefreshTokenRaw(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RefreshTokenResponse>* PrepareAsyncRefreshTokenRaw(::grpc::ClientContext* context, const ::securecloud::auth::RefreshTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::securecloud::auth::ValidateTokenResponse>* AsyncValidateTokenRaw(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::securecloud::auth::ValidateTokenResponse>* PrepareAsyncValidateTokenRaw(::grpc::ClientContext* context, const ::securecloud::auth::ValidateTokenRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RevokeTokensResponse>* AsyncRevokeTokensRaw(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest& request, ::grpc::CompletionQueue* cq) override;
    ::grpc::ClientAsyncResponseReader< ::securecloud::auth::RevokeTokensResponse>* PrepareAsyncRevokeTokensRaw(::grpc::ClientContext* context, const ::securecloud::auth::RevokeTokensRequest& request, ::grpc::CompletionQueue* cq) override;
    const ::grpc::internal::RpcMethod rpcmethod_Login_;
    const ::grpc::internal::RpcMethod rpcmethod_RefreshToken_;
    const ::grpc::internal::RpcMethod rpcmethod_ValidateToken_;
    const ::grpc::internal::RpcMethod rpcmethod_RevokeTokens_;
  };
  static std::unique_ptr<Stub> NewStub(const std::shared_ptr< ::grpc::ChannelInterface>& channel, const ::grpc::StubOptions& options = ::grpc::StubOptions());

  class Service : public ::grpc::Service {
   public:
    Service();
    virtual ~Service();
    virtual ::grpc::Status Login(::grpc::ServerContext* context, const ::securecloud::auth::LoginRequest* request, ::securecloud::auth::LoginResponse* response);
    virtual ::grpc::Status RefreshToken(::grpc::ServerContext* context, const ::securecloud::auth::RefreshTokenRequest* request, ::securecloud::auth::RefreshTokenResponse* response);
    virtual ::grpc::Status ValidateToken(::grpc::ServerContext* context, const ::securecloud::auth::ValidateTokenRequest* request, ::securecloud::auth::ValidateTokenResponse* response);
    virtual ::grpc::Status RevokeTokens(::grpc::ServerContext* context, const ::securecloud::auth::RevokeTokensRequest* request, ::securecloud::auth::RevokeTokensResponse* response);
  };
  template <class BaseClass>
  class WithAsyncMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_Login() {
      ::grpc::Service::MarkMethodAsync(0);
    }
    ~WithAsyncMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::securecloud::auth::LoginRequest* /*request*/, ::securecloud::auth::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::securecloud::auth::LoginRequest* request, ::grpc::ServerAsyncResponseWriter< ::securecloud::auth::LoginResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RefreshToken() {
      ::grpc::Service::MarkMethodAsync(1);
    }
    ~WithAsyncMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RefreshTokenRequest* /*request*/, ::securecloud::auth::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRefreshToken(::grpc::ServerContext* context, ::securecloud::auth::RefreshTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::securecloud::auth::RefreshTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_ValidateToken() {
      ::grpc::Service::MarkMethodAsync(2);
    }
    ~WithAsyncMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::ValidateTokenRequest* /*request*/, ::securecloud::auth::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateToken(::grpc::ServerContext* context, ::securecloud::auth::ValidateTokenRequest* request, ::grpc::ServerAsyncResponseWriter< ::securecloud::auth::ValidateTokenResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithAsyncMethod_RevokeTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithAsyncMethod_RevokeTokens() {
      ::grpc::Service::MarkMethodAsync(3);
    }
    ~WithAsyncMethod_RevokeTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RevokeTokens(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RevokeTokensRequest* /*request*/, ::securecloud::auth::RevokeTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRevokeTokens(::grpc::ServerContext* context, ::securecloud::auth::RevokeTokensRequest* request, ::grpc::ServerAsyncResponseWriter< ::securecloud::auth::RevokeTokensResponse>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  typedef WithAsyncMethod_Login<WithAsyncMethod_RefreshToken<WithAsyncMethod_ValidateToken<WithAsyncMethod_RevokeTokens<Service > > > > AsyncService;
  template <class BaseClass>
  class WithCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_Login() {
      ::grpc::Service::MarkMethodCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::securecloud::auth::LoginRequest, ::securecloud::auth::LoginResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::securecloud::auth::LoginRequest* request, ::securecloud::auth::LoginResponse* response) { return this->Login(context, request, response); }));}
    void SetMessageAllocatorFor_Login(
        ::grpc::MessageAllocator< ::securecloud::auth::LoginRequest, ::securecloud::auth::LoginResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(0);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::securecloud::auth::LoginRequest, ::securecloud::auth::LoginResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::securecloud::auth::LoginRequest* /*request*/, ::securecloud::auth::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::securecloud::auth::LoginRequest* /*request*/, ::securecloud::auth::LoginResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RefreshToken() {
      ::grpc::Service::MarkMethodCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::securecloud::auth::RefreshTokenRequest, ::securecloud::auth::RefreshTokenResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::securecloud::auth::RefreshTokenRequest* request, ::securecloud::auth::RefreshTokenResponse* response) { return this->RefreshToken(context, request, response); }));}
    void SetMessageAllocatorFor_RefreshToken(
        ::grpc::MessageAllocator< ::securecloud::auth::RefreshTokenRequest, ::securecloud::auth::RefreshTokenResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(1);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::securecloud::auth::RefreshTokenRequest, ::securecloud::auth::RefreshTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RefreshTokenRequest* /*request*/, ::securecloud::auth::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RefreshToken(
      ::grpc::CallbackServerContext* /*context*/, const ::securecloud::auth::RefreshTokenRequest* /*request*/, ::securecloud::auth::RefreshTokenResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_ValidateToken() {
      ::grpc::Service::MarkMethodCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::securecloud::auth::ValidateTokenRequest, ::securecloud::auth::ValidateTokenResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::securecloud::auth::ValidateTokenRequest* request, ::securecloud::auth::ValidateTokenResponse* response) { return this->ValidateToken(context, request, response); }));}
    void SetMessageAllocatorFor_ValidateToken(
        ::grpc::MessageAllocator< ::securecloud::auth::ValidateTokenRequest, ::securecloud::auth::ValidateTokenResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(2);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::securecloud::auth::ValidateTokenRequest, ::securecloud::auth::ValidateTokenResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::ValidateTokenRequest* /*request*/, ::securecloud::auth::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateToken(
      ::grpc::CallbackServerContext* /*context*/, const ::securecloud::auth::ValidateTokenRequest* /*request*/, ::securecloud::auth::ValidateTokenResponse* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithCallbackMethod_RevokeTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithCallbackMethod_RevokeTokens() {
      ::grpc::Service::MarkMethodCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::securecloud::auth::RevokeTokensRequest, ::securecloud::auth::RevokeTokensResponse>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::securecloud::auth::RevokeTokensRequest* request, ::securecloud::auth::RevokeTokensResponse* response) { return this->RevokeTokens(context, request, response); }));}
    void SetMessageAllocatorFor_RevokeTokens(
        ::grpc::MessageAllocator< ::securecloud::auth::RevokeTokensRequest, ::securecloud::auth::RevokeTokensResponse>* allocator) {
      ::grpc::internal::MethodHandler* const handler = ::grpc::Service::GetHandler(3);
      static_cast<::grpc::internal::CallbackUnaryHandler< ::securecloud::auth::RevokeTokensRequest, ::securecloud::auth::RevokeTokensResponse>*>(handler)
              ->SetMessageAllocator(allocator);
    }
    ~WithCallbackMethod_RevokeTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RevokeTokens(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RevokeTokensRequest* /*request*/, ::securecloud::auth::RevokeTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RevokeTokens(
      ::grpc::CallbackServerContext* /*context*/, const ::securecloud::auth::RevokeTokensRequest* /*request*/, ::securecloud::auth::RevokeTokensResponse* /*response*/)  { return nullptr; }
  };
  typedef WithCallbackMethod_Login<WithCallbackMethod_RefreshToken<WithCallbackMethod_ValidateToken<WithCallbackMethod_RevokeTokens<Service > > > > CallbackService;
  typedef CallbackService ExperimentalCallbackService;
  template <class BaseClass>
  class WithGenericMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_Login() {
      ::grpc::Service::MarkMethodGeneric(0);
    }
    ~WithGenericMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::securecloud::auth::LoginRequest* /*request*/, ::securecloud::auth::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RefreshToken() {
      ::grpc::Service::MarkMethodGeneric(1);
    }
    ~WithGenericMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RefreshTokenRequest* /*request*/, ::securecloud::auth::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_ValidateToken() {
      ::grpc::Service::MarkMethodGeneric(2);
    }
    ~WithGenericMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::ValidateTokenRequest* /*request*/, ::securecloud::auth::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithGenericMethod_RevokeTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithGenericMethod_RevokeTokens() {
      ::grpc::Service::MarkMethodGeneric(3);
    }
    ~WithGenericMethod_RevokeTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RevokeTokens(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RevokeTokensRequest* /*request*/, ::securecloud::auth::RevokeTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
  };
  template <class BaseClass>
  class WithRawMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_Login() {
      ::grpc::Service::MarkMethodRaw(0);
    }
    ~WithRawMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::securecloud::auth::LoginRequest* /*request*/, ::securecloud::auth::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestLogin(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(0, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RefreshToken() {
      ::grpc::Service::MarkMethodRaw(1);
    }
    ~WithRawMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RefreshTokenRequest* /*request*/, ::securecloud::auth::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRefreshToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(1, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_ValidateToken() {
      ::grpc::Service::MarkMethodRaw(2);
    }
    ~WithRawMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::ValidateTokenRequest* /*request*/, ::securecloud::auth::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestValidateToken(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(2, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawMethod_RevokeTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawMethod_RevokeTokens() {
      ::grpc::Service::MarkMethodRaw(3);
    }
    ~WithRawMethod_RevokeTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RevokeTokens(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RevokeTokensRequest* /*request*/, ::securecloud::auth::RevokeTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    void RequestRevokeTokens(::grpc::ServerContext* context, ::grpc::ByteBuffer* request, ::grpc::ServerAsyncResponseWriter< ::grpc::ByteBuffer>* response, ::grpc::CompletionQueue* new_call_cq, ::grpc::ServerCompletionQueue* notification_cq, void *tag) {
      ::grpc::Service::RequestAsyncUnary(3, context, request, response, new_call_cq, notification_cq, tag);
    }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_Login() {
      ::grpc::Service::MarkMethodRawCallback(0,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->Login(context, request, response); }));
    }
    ~WithRawCallbackMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::securecloud::auth::LoginRequest* /*request*/, ::securecloud::auth::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* Login(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RefreshToken() {
      ::grpc::Service::MarkMethodRawCallback(1,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RefreshToken(context, request, response); }));
    }
    ~WithRawCallbackMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RefreshTokenRequest* /*request*/, ::securecloud::auth::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RefreshToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_ValidateToken() {
      ::grpc::Service::MarkMethodRawCallback(2,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->ValidateToken(context, request, response); }));
    }
    ~WithRawCallbackMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::ValidateTokenRequest* /*request*/, ::securecloud::auth::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* ValidateToken(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithRawCallbackMethod_RevokeTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithRawCallbackMethod_RevokeTokens() {
      ::grpc::Service::MarkMethodRawCallback(3,
          new ::grpc::internal::CallbackUnaryHandler< ::grpc::ByteBuffer, ::grpc::ByteBuffer>(
            [this](
                   ::grpc::CallbackServerContext* context, const ::grpc::ByteBuffer* request, ::grpc::ByteBuffer* response) { return this->RevokeTokens(context, request, response); }));
    }
    ~WithRawCallbackMethod_RevokeTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable synchronous version of this method
    ::grpc::Status RevokeTokens(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RevokeTokensRequest* /*request*/, ::securecloud::auth::RevokeTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    virtual ::grpc::ServerUnaryReactor* RevokeTokens(
      ::grpc::CallbackServerContext* /*context*/, const ::grpc::ByteBuffer* /*request*/, ::grpc::ByteBuffer* /*response*/)  { return nullptr; }
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_Login : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_Login() {
      ::grpc::Service::MarkMethodStreamed(0,
        new ::grpc::internal::StreamedUnaryHandler<
          ::securecloud::auth::LoginRequest, ::securecloud::auth::LoginResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::securecloud::auth::LoginRequest, ::securecloud::auth::LoginResponse>* streamer) {
                       return this->StreamedLogin(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_Login() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status Login(::grpc::ServerContext* /*context*/, const ::securecloud::auth::LoginRequest* /*request*/, ::securecloud::auth::LoginResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedLogin(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::securecloud::auth::LoginRequest,::securecloud::auth::LoginResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RefreshToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RefreshToken() {
      ::grpc::Service::MarkMethodStreamed(1,
        new ::grpc::internal::StreamedUnaryHandler<
          ::securecloud::auth::RefreshTokenRequest, ::securecloud::auth::RefreshTokenResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::securecloud::auth::RefreshTokenRequest, ::securecloud::auth::RefreshTokenResponse>* streamer) {
                       return this->StreamedRefreshToken(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RefreshToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RefreshToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RefreshTokenRequest* /*request*/, ::securecloud::auth::RefreshTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRefreshToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::securecloud::auth::RefreshTokenRequest,::securecloud::auth::RefreshTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_ValidateToken : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_ValidateToken() {
      ::grpc::Service::MarkMethodStreamed(2,
        new ::grpc::internal::StreamedUnaryHandler<
          ::securecloud::auth::ValidateTokenRequest, ::securecloud::auth::ValidateTokenResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::securecloud::auth::ValidateTokenRequest, ::securecloud::auth::ValidateTokenResponse>* streamer) {
                       return this->StreamedValidateToken(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_ValidateToken() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status ValidateToken(::grpc::ServerContext* /*context*/, const ::securecloud::auth::ValidateTokenRequest* /*request*/, ::securecloud::auth::ValidateTokenResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedValidateToken(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::securecloud::auth::ValidateTokenRequest,::securecloud::auth::ValidateTokenResponse>* server_unary_streamer) = 0;
  };
  template <class BaseClass>
  class WithStreamedUnaryMethod_RevokeTokens : public BaseClass {
   private:
    void BaseClassMustBeDerivedFromService(const Service* /*service*/) {}
   public:
    WithStreamedUnaryMethod_RevokeTokens() {
      ::grpc::Service::MarkMethodStreamed(3,
        new ::grpc::internal::StreamedUnaryHandler<
          ::securecloud::auth::RevokeTokensRequest, ::securecloud::auth::RevokeTokensResponse>(
            [this](::grpc::ServerContext* context,
                   ::grpc::ServerUnaryStreamer<
                     ::securecloud::auth::RevokeTokensRequest, ::securecloud::auth::RevokeTokensResponse>* streamer) {
                       return this->StreamedRevokeTokens(context,
                         streamer);
                  }));
    }
    ~WithStreamedUnaryMethod_RevokeTokens() override {
      BaseClassMustBeDerivedFromService(this);
    }
    // disable regular version of this method
    ::grpc::Status RevokeTokens(::grpc::ServerContext* /*context*/, const ::securecloud::auth::RevokeTokensRequest* /*request*/, ::securecloud::auth::RevokeTokensResponse* /*response*/) override {
      abort();
      return ::grpc::Status(::grpc::StatusCode::UNIMPLEMENTED, "");
    }
    // replace default version of method with streamed unary
    virtual ::grpc::Status StreamedRevokeTokens(::grpc::ServerContext* context, ::grpc::ServerUnaryStreamer< ::securecloud::auth::RevokeTokensRequest,::securecloud::auth::RevokeTokensResponse>* server_unary_streamer) = 0;
  };
  typedef WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_RefreshToken<WithStreamedUnaryMethod_ValidateToken<WithStreamedUnaryMethod_RevokeTokens<Service > > > > StreamedUnaryService;
  typedef Service SplitStreamedService;
  typedef WithStreamedUnaryMethod_Login<WithStreamedUnaryMethod_RefreshToken<WithStreamedUnaryMethod_ValidateToken<WithStreamedUnaryMethod_RevokeTokens<Service > > > > StreamedService;
};

}  // namespace auth
}  // namespace securecloud


#include <grpcpp/ports_undef.inc>
#endif  // GRPC_auth_2eproto__INCLUDED
