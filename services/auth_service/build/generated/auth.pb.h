// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: auth.proto
// Protobuf C++ Version: 6.32.1

#ifndef auth_2eproto_2epb_2eh
#define auth_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/runtime_version.h"
#if PROTOBUF_VERSION != 6032001
#error "Protobuf C++ gencode is built with an incompatible version of"
#error "Protobuf C++ headers/runtime. See"
#error "https://protobuf.dev/support/cross-version-runtime-guarantee/#cpp"
#endif
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/message_lite.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_auth_2eproto

namespace google {
namespace protobuf {
namespace internal {
template <typename T>
::absl::string_view GetAnyMessageName();
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_auth_2eproto {
  static const ::uint32_t offsets[];
};
extern "C" {
extern const ::google::protobuf::internal::DescriptorTable descriptor_table_auth_2eproto;
}  // extern "C"
namespace securecloud {
namespace auth {
class LoginRequest;
struct LoginRequestDefaultTypeInternal;
extern LoginRequestDefaultTypeInternal _LoginRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LoginRequest_class_data_;
class LoginResponse;
struct LoginResponseDefaultTypeInternal;
extern LoginResponseDefaultTypeInternal _LoginResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull LoginResponse_class_data_;
class RefreshTokenRequest;
struct RefreshTokenRequestDefaultTypeInternal;
extern RefreshTokenRequestDefaultTypeInternal _RefreshTokenRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RefreshTokenRequest_class_data_;
class RefreshTokenResponse;
struct RefreshTokenResponseDefaultTypeInternal;
extern RefreshTokenResponseDefaultTypeInternal _RefreshTokenResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RefreshTokenResponse_class_data_;
class RevokeTokensRequest;
struct RevokeTokensRequestDefaultTypeInternal;
extern RevokeTokensRequestDefaultTypeInternal _RevokeTokensRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RevokeTokensRequest_class_data_;
class RevokeTokensResponse;
struct RevokeTokensResponseDefaultTypeInternal;
extern RevokeTokensResponseDefaultTypeInternal _RevokeTokensResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull RevokeTokensResponse_class_data_;
class ValidateTokenRequest;
struct ValidateTokenRequestDefaultTypeInternal;
extern ValidateTokenRequestDefaultTypeInternal _ValidateTokenRequest_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ValidateTokenRequest_class_data_;
class ValidateTokenResponse;
struct ValidateTokenResponseDefaultTypeInternal;
extern ValidateTokenResponseDefaultTypeInternal _ValidateTokenResponse_default_instance_;
extern const ::google::protobuf::internal::ClassDataFull ValidateTokenResponse_class_data_;
}  // namespace auth
}  // namespace securecloud
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google

namespace securecloud {
namespace auth {

// ===================================================================


// -------------------------------------------------------------------

class ValidateTokenResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:securecloud.auth.ValidateTokenResponse) */ {
 public:
  inline ValidateTokenResponse() : ValidateTokenResponse(nullptr) {}
  ~ValidateTokenResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidateTokenResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidateTokenResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidateTokenResponse(::google::protobuf::internal::ConstantInitialized);

  inline ValidateTokenResponse(const ValidateTokenResponse& from) : ValidateTokenResponse(nullptr, from) {}
  inline ValidateTokenResponse(ValidateTokenResponse&& from) noexcept
      : ValidateTokenResponse(nullptr, ::std::move(from)) {}
  inline ValidateTokenResponse& operator=(const ValidateTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidateTokenResponse& operator=(ValidateTokenResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidateTokenResponse& default_instance() {
    return *reinterpret_cast<const ValidateTokenResponse*>(
        &_ValidateTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 5;
  friend void swap(ValidateTokenResponse& a, ValidateTokenResponse& b) { a.Swap(&b); }
  inline void Swap(ValidateTokenResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidateTokenResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidateTokenResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidateTokenResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidateTokenResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidateTokenResponse& from) { ValidateTokenResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidateTokenResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "securecloud.auth.ValidateTokenResponse"; }

 protected:
  explicit ValidateTokenResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ValidateTokenResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ValidateTokenResponse& from);
  ValidateTokenResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ValidateTokenResponse&& from) noexcept
      : ValidateTokenResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kPermissionsFieldNumber = 3,
    kUserIdFieldNumber = 2,
    kValidFieldNumber = 1,
  };
  // repeated string permissions = 3;
  int permissions_size() const;
  private:
  int _internal_permissions_size() const;

  public:
  void clear_permissions() ;
  const ::std::string& permissions(int index) const;
  ::std::string* PROTOBUF_NONNULL mutable_permissions(int index);
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_permissions(int index, Arg_&& value, Args_... args);
  ::std::string* PROTOBUF_NONNULL add_permissions();
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void add_permissions(Arg_&& value, Args_... args);
  const ::google::protobuf::RepeatedPtrField<::std::string>& permissions() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL mutable_permissions();

  private:
  const ::google::protobuf::RepeatedPtrField<::std::string>& _internal_permissions() const;
  ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL _internal_mutable_permissions();

  public:
  // string user_id = 2;
  void clear_user_id() ;
  const ::std::string& user_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_user_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_user_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_user_id();
  void set_allocated_user_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_user_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_user_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_user_id();

  public:
  // bool valid = 1;
  void clear_valid() ;
  bool valid() const;
  void set_valid(bool value);

  private:
  bool _internal_valid() const;
  void _internal_set_valid(bool value);

  public:
  // @@protoc_insertion_point(class_scope:securecloud.auth.ValidateTokenResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 65,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ValidateTokenResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::RepeatedPtrField<::std::string> permissions_;
    ::google::protobuf::internal::ArenaStringPtr user_id_;
    bool valid_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_auth_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ValidateTokenResponse_class_data_;
// -------------------------------------------------------------------

class ValidateTokenRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:securecloud.auth.ValidateTokenRequest) */ {
 public:
  inline ValidateTokenRequest() : ValidateTokenRequest(nullptr) {}
  ~ValidateTokenRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(ValidateTokenRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(ValidateTokenRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR ValidateTokenRequest(::google::protobuf::internal::ConstantInitialized);

  inline ValidateTokenRequest(const ValidateTokenRequest& from) : ValidateTokenRequest(nullptr, from) {}
  inline ValidateTokenRequest(ValidateTokenRequest&& from) noexcept
      : ValidateTokenRequest(nullptr, ::std::move(from)) {}
  inline ValidateTokenRequest& operator=(const ValidateTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline ValidateTokenRequest& operator=(ValidateTokenRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ValidateTokenRequest& default_instance() {
    return *reinterpret_cast<const ValidateTokenRequest*>(
        &_ValidateTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 4;
  friend void swap(ValidateTokenRequest& a, ValidateTokenRequest& b) { a.Swap(&b); }
  inline void Swap(ValidateTokenRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ValidateTokenRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ValidateTokenRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<ValidateTokenRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ValidateTokenRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const ValidateTokenRequest& from) { ValidateTokenRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(ValidateTokenRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "securecloud.auth.ValidateTokenRequest"; }

 protected:
  explicit ValidateTokenRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  ValidateTokenRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const ValidateTokenRequest& from);
  ValidateTokenRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, ValidateTokenRequest&& from) noexcept
      : ValidateTokenRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccessTokenFieldNumber = 1,
  };
  // string access_token = 1;
  void clear_access_token() ;
  const ::std::string& access_token() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_access_token(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_access_token();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_access_token();
  void set_allocated_access_token(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_access_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_access_token(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_access_token();

  public:
  // @@protoc_insertion_point(class_scope:securecloud.auth.ValidateTokenRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const ValidateTokenRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr access_token_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_auth_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull ValidateTokenRequest_class_data_;
// -------------------------------------------------------------------

class RevokeTokensResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:securecloud.auth.RevokeTokensResponse) */ {
 public:
  inline RevokeTokensResponse() : RevokeTokensResponse(nullptr) {}
  ~RevokeTokensResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RevokeTokensResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RevokeTokensResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RevokeTokensResponse(::google::protobuf::internal::ConstantInitialized);

  inline RevokeTokensResponse(const RevokeTokensResponse& from) : RevokeTokensResponse(nullptr, from) {}
  inline RevokeTokensResponse(RevokeTokensResponse&& from) noexcept
      : RevokeTokensResponse(nullptr, ::std::move(from)) {}
  inline RevokeTokensResponse& operator=(const RevokeTokensResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RevokeTokensResponse& operator=(RevokeTokensResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RevokeTokensResponse& default_instance() {
    return *reinterpret_cast<const RevokeTokensResponse*>(
        &_RevokeTokensResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 7;
  friend void swap(RevokeTokensResponse& a, RevokeTokensResponse& b) { a.Swap(&b); }
  inline void Swap(RevokeTokensResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RevokeTokensResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RevokeTokensResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RevokeTokensResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RevokeTokensResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RevokeTokensResponse& from) { RevokeTokensResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RevokeTokensResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "securecloud.auth.RevokeTokensResponse"; }

 protected:
  explicit RevokeTokensResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RevokeTokensResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RevokeTokensResponse& from);
  RevokeTokensResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RevokeTokensResponse&& from) noexcept
      : RevokeTokensResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kSuccessFieldNumber = 1,
  };
  // bool success = 1;
  void clear_success() ;
  bool success() const;
  void set_success(bool value);

  private:
  bool _internal_success() const;
  void _internal_set_success(bool value);

  public:
  // @@protoc_insertion_point(class_scope:securecloud.auth.RevokeTokensResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 0,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RevokeTokensResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    bool success_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_auth_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RevokeTokensResponse_class_data_;
// -------------------------------------------------------------------

class RevokeTokensRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:securecloud.auth.RevokeTokensRequest) */ {
 public:
  inline RevokeTokensRequest() : RevokeTokensRequest(nullptr) {}
  ~RevokeTokensRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RevokeTokensRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RevokeTokensRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RevokeTokensRequest(::google::protobuf::internal::ConstantInitialized);

  inline RevokeTokensRequest(const RevokeTokensRequest& from) : RevokeTokensRequest(nullptr, from) {}
  inline RevokeTokensRequest(RevokeTokensRequest&& from) noexcept
      : RevokeTokensRequest(nullptr, ::std::move(from)) {}
  inline RevokeTokensRequest& operator=(const RevokeTokensRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RevokeTokensRequest& operator=(RevokeTokensRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RevokeTokensRequest& default_instance() {
    return *reinterpret_cast<const RevokeTokensRequest*>(
        &_RevokeTokensRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 6;
  friend void swap(RevokeTokensRequest& a, RevokeTokensRequest& b) { a.Swap(&b); }
  inline void Swap(RevokeTokensRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RevokeTokensRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RevokeTokensRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RevokeTokensRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RevokeTokensRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RevokeTokensRequest& from) { RevokeTokensRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RevokeTokensRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "securecloud.auth.RevokeTokensRequest"; }

 protected:
  explicit RevokeTokensRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RevokeTokensRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RevokeTokensRequest& from);
  RevokeTokensRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RevokeTokensRequest&& from) noexcept
      : RevokeTokensRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUserIdFieldNumber = 1,
  };
  // string user_id = 1;
  void clear_user_id() ;
  const ::std::string& user_id() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_user_id(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_user_id();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_user_id();
  void set_allocated_user_id(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_user_id() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_user_id(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_user_id();

  public:
  // @@protoc_insertion_point(class_scope:securecloud.auth.RevokeTokensRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 52,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RevokeTokensRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr user_id_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_auth_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RevokeTokensRequest_class_data_;
// -------------------------------------------------------------------

class RefreshTokenResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:securecloud.auth.RefreshTokenResponse) */ {
 public:
  inline RefreshTokenResponse() : RefreshTokenResponse(nullptr) {}
  ~RefreshTokenResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RefreshTokenResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RefreshTokenResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RefreshTokenResponse(::google::protobuf::internal::ConstantInitialized);

  inline RefreshTokenResponse(const RefreshTokenResponse& from) : RefreshTokenResponse(nullptr, from) {}
  inline RefreshTokenResponse(RefreshTokenResponse&& from) noexcept
      : RefreshTokenResponse(nullptr, ::std::move(from)) {}
  inline RefreshTokenResponse& operator=(const RefreshTokenResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline RefreshTokenResponse& operator=(RefreshTokenResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RefreshTokenResponse& default_instance() {
    return *reinterpret_cast<const RefreshTokenResponse*>(
        &_RefreshTokenResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 3;
  friend void swap(RefreshTokenResponse& a, RefreshTokenResponse& b) { a.Swap(&b); }
  inline void Swap(RefreshTokenResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RefreshTokenResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RefreshTokenResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RefreshTokenResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RefreshTokenResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RefreshTokenResponse& from) { RefreshTokenResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RefreshTokenResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "securecloud.auth.RefreshTokenResponse"; }

 protected:
  explicit RefreshTokenResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RefreshTokenResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RefreshTokenResponse& from);
  RefreshTokenResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RefreshTokenResponse&& from) noexcept
      : RefreshTokenResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccessTokenFieldNumber = 1,
    kExpiresInFieldNumber = 2,
  };
  // string access_token = 1;
  void clear_access_token() ;
  const ::std::string& access_token() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_access_token(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_access_token();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_access_token();
  void set_allocated_access_token(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_access_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_access_token(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_access_token();

  public:
  // int64 expires_in = 2;
  void clear_expires_in() ;
  ::int64_t expires_in() const;
  void set_expires_in(::int64_t value);

  private:
  ::int64_t _internal_expires_in() const;
  void _internal_set_expires_in(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:securecloud.auth.RefreshTokenResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<1, 2,
                                   0, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RefreshTokenResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr access_token_;
    ::int64_t expires_in_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_auth_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RefreshTokenResponse_class_data_;
// -------------------------------------------------------------------

class RefreshTokenRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:securecloud.auth.RefreshTokenRequest) */ {
 public:
  inline RefreshTokenRequest() : RefreshTokenRequest(nullptr) {}
  ~RefreshTokenRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(RefreshTokenRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(RefreshTokenRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR RefreshTokenRequest(::google::protobuf::internal::ConstantInitialized);

  inline RefreshTokenRequest(const RefreshTokenRequest& from) : RefreshTokenRequest(nullptr, from) {}
  inline RefreshTokenRequest(RefreshTokenRequest&& from) noexcept
      : RefreshTokenRequest(nullptr, ::std::move(from)) {}
  inline RefreshTokenRequest& operator=(const RefreshTokenRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline RefreshTokenRequest& operator=(RefreshTokenRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const RefreshTokenRequest& default_instance() {
    return *reinterpret_cast<const RefreshTokenRequest*>(
        &_RefreshTokenRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 2;
  friend void swap(RefreshTokenRequest& a, RefreshTokenRequest& b) { a.Swap(&b); }
  inline void Swap(RefreshTokenRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(RefreshTokenRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  RefreshTokenRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<RefreshTokenRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const RefreshTokenRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const RefreshTokenRequest& from) { RefreshTokenRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(RefreshTokenRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "securecloud.auth.RefreshTokenRequest"; }

 protected:
  explicit RefreshTokenRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  RefreshTokenRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const RefreshTokenRequest& from);
  RefreshTokenRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, RefreshTokenRequest&& from) noexcept
      : RefreshTokenRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kRefreshTokenFieldNumber = 1,
  };
  // string refresh_token = 1;
  void clear_refresh_token() ;
  const ::std::string& refresh_token() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_refresh_token(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_refresh_token();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_refresh_token();
  void set_allocated_refresh_token(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_refresh_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_refresh_token(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_refresh_token();

  public:
  // @@protoc_insertion_point(class_scope:securecloud.auth.RefreshTokenRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<0, 1,
                                   0, 58,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const RefreshTokenRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr refresh_token_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_auth_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull RefreshTokenRequest_class_data_;
// -------------------------------------------------------------------

class LoginResponse final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:securecloud.auth.LoginResponse) */ {
 public:
  inline LoginResponse() : LoginResponse(nullptr) {}
  ~LoginResponse() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginResponse* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginResponse));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginResponse(::google::protobuf::internal::ConstantInitialized);

  inline LoginResponse(const LoginResponse& from) : LoginResponse(nullptr, from) {}
  inline LoginResponse(LoginResponse&& from) noexcept
      : LoginResponse(nullptr, ::std::move(from)) {}
  inline LoginResponse& operator=(const LoginResponse& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginResponse& operator=(LoginResponse&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginResponse& default_instance() {
    return *reinterpret_cast<const LoginResponse*>(
        &_LoginResponse_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 1;
  friend void swap(LoginResponse& a, LoginResponse& b) { a.Swap(&b); }
  inline void Swap(LoginResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginResponse* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginResponse* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginResponse>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginResponse& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginResponse& from) { LoginResponse::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginResponse* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "securecloud.auth.LoginResponse"; }

 protected:
  explicit LoginResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LoginResponse(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LoginResponse& from);
  LoginResponse(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LoginResponse&& from) noexcept
      : LoginResponse(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kAccessTokenFieldNumber = 1,
    kRefreshTokenFieldNumber = 2,
    kExpiresInFieldNumber = 3,
  };
  // string access_token = 1;
  void clear_access_token() ;
  const ::std::string& access_token() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_access_token(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_access_token();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_access_token();
  void set_allocated_access_token(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_access_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_access_token(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_access_token();

  public:
  // string refresh_token = 2;
  void clear_refresh_token() ;
  const ::std::string& refresh_token() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_refresh_token(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_refresh_token();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_refresh_token();
  void set_allocated_refresh_token(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_refresh_token() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_refresh_token(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_refresh_token();

  public:
  // int64 expires_in = 3;
  void clear_expires_in() ;
  ::int64_t expires_in() const;
  void set_expires_in(::int64_t value);

  private:
  ::int64_t _internal_expires_in() const;
  void _internal_set_expires_in(::int64_t value);

  public:
  // @@protoc_insertion_point(class_scope:securecloud.auth.LoginResponse)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 64,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LoginResponse& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr access_token_;
    ::google::protobuf::internal::ArenaStringPtr refresh_token_;
    ::int64_t expires_in_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_auth_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LoginResponse_class_data_;
// -------------------------------------------------------------------

class LoginRequest final : public ::google::protobuf::Message
/* @@protoc_insertion_point(class_definition:securecloud.auth.LoginRequest) */ {
 public:
  inline LoginRequest() : LoginRequest(nullptr) {}
  ~LoginRequest() PROTOBUF_FINAL;

#if defined(PROTOBUF_CUSTOM_VTABLE)
  void operator delete(LoginRequest* PROTOBUF_NONNULL msg, ::std::destroying_delete_t) {
    SharedDtor(*msg);
    ::google::protobuf::internal::SizedDelete(msg, sizeof(LoginRequest));
  }
#endif

  template <typename = void>
  explicit PROTOBUF_CONSTEXPR LoginRequest(::google::protobuf::internal::ConstantInitialized);

  inline LoginRequest(const LoginRequest& from) : LoginRequest(nullptr, from) {}
  inline LoginRequest(LoginRequest&& from) noexcept
      : LoginRequest(nullptr, ::std::move(from)) {}
  inline LoginRequest& operator=(const LoginRequest& from) {
    CopyFrom(from);
    return *this;
  }
  inline LoginRequest& operator=(LoginRequest&& from) noexcept {
    if (this == &from) return *this;
    if (::google::protobuf::internal::CanMoveWithInternalSwap(GetArena(), from.GetArena())) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* PROTOBUF_NONNULL mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* PROTOBUF_NONNULL GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* PROTOBUF_NONNULL GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const LoginRequest& default_instance() {
    return *reinterpret_cast<const LoginRequest*>(
        &_LoginRequest_default_instance_);
  }
  static constexpr int kIndexInFileMessages = 0;
  friend void swap(LoginRequest& a, LoginRequest& b) { a.Swap(&b); }
  inline void Swap(LoginRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    if (::google::protobuf::internal::CanUseInternalSwap(GetArena(), other->GetArena())) {
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(LoginRequest* PROTOBUF_NONNULL other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  LoginRequest* PROTOBUF_NONNULL New(::google::protobuf::Arena* PROTOBUF_NULLABLE arena = nullptr) const {
    return ::google::protobuf::Message::DefaultConstruct<LoginRequest>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const LoginRequest& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom(const LoginRequest& from) { LoginRequest::MergeImpl(*this, from); }

  private:
  static void MergeImpl(::google::protobuf::MessageLite& to_msg,
                        const ::google::protobuf::MessageLite& from_msg);

  public:
  bool IsInitialized() const {
    return true;
  }
  ABSL_ATTRIBUTE_REINITIALIZES void Clear() PROTOBUF_FINAL;
  #if defined(PROTOBUF_CUSTOM_VTABLE)
  private:
  static ::size_t ByteSizeLong(const ::google::protobuf::MessageLite& msg);
  static ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      const ::google::protobuf::MessageLite& msg, ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream);

  public:
  ::size_t ByteSizeLong() const { return ByteSizeLong(*this); }
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const {
    return _InternalSerialize(*this, target, stream);
  }
  #else   // PROTOBUF_CUSTOM_VTABLE
  ::size_t ByteSizeLong() const final;
  ::uint8_t* PROTOBUF_NONNULL _InternalSerialize(
      ::uint8_t* PROTOBUF_NONNULL target,
      ::google::protobuf::io::EpsCopyOutputStream* PROTOBUF_NONNULL stream) const final;
  #endif  // PROTOBUF_CUSTOM_VTABLE
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  void SharedCtor(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static void SharedDtor(MessageLite& self);
  void InternalSwap(LoginRequest* PROTOBUF_NONNULL other);
 private:
  template <typename T>
  friend ::absl::string_view(::google::protobuf::internal::GetAnyMessageName)();
  static ::absl::string_view FullMessageName() { return "securecloud.auth.LoginRequest"; }

 protected:
  explicit LoginRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  LoginRequest(::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const LoginRequest& from);
  LoginRequest(
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, LoginRequest&& from) noexcept
      : LoginRequest(arena) {
    *this = ::std::move(from);
  }
  const ::google::protobuf::internal::ClassData* PROTOBUF_NONNULL GetClassData() const PROTOBUF_FINAL;
  static void* PROTOBUF_NONNULL PlacementNew_(
      const void* PROTOBUF_NONNULL, void* PROTOBUF_NONNULL mem,
      ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
  static constexpr auto InternalNewImpl_();

 public:
  static constexpr auto InternalGenerateClassData_();

  ::google::protobuf::Metadata GetMetadata() const;
  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------
  enum : int {
    kUsernameFieldNumber = 1,
    kPasswordFieldNumber = 2,
    kMfaCodeFieldNumber = 3,
  };
  // string username = 1;
  void clear_username() ;
  const ::std::string& username() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_username(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_username();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_username();
  void set_allocated_username(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_username() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_username(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_username();

  public:
  // string password = 2;
  void clear_password() ;
  const ::std::string& password() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_password(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_password();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_password();
  void set_allocated_password(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_password() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_password(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_password();

  public:
  // string mfa_code = 3;
  void clear_mfa_code() ;
  const ::std::string& mfa_code() const;
  template <typename Arg_ = const ::std::string&, typename... Args_>
  void set_mfa_code(Arg_&& arg, Args_... args);
  ::std::string* PROTOBUF_NONNULL mutable_mfa_code();
  [[nodiscard]] ::std::string* PROTOBUF_NULLABLE release_mfa_code();
  void set_allocated_mfa_code(::std::string* PROTOBUF_NULLABLE value);

  private:
  const ::std::string& _internal_mfa_code() const;
  PROTOBUF_ALWAYS_INLINE void _internal_set_mfa_code(const ::std::string& value);
  ::std::string* PROTOBUF_NONNULL _internal_mutable_mfa_code();

  public:
  // @@protoc_insertion_point(class_scope:securecloud.auth.LoginRequest)
 private:
  class _Internal;
  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<2, 3,
                                   0, 62,
                                   2>
      _table_;

  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {
    inline explicit constexpr Impl_(::google::protobuf::internal::ConstantInitialized) noexcept;
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena);
    inline explicit Impl_(
        ::google::protobuf::internal::InternalVisibility visibility,
        ::google::protobuf::Arena* PROTOBUF_NULLABLE arena, const Impl_& from,
        const LoginRequest& from_msg);
    ::google::protobuf::internal::HasBits<1> _has_bits_;
    ::google::protobuf::internal::CachedSize _cached_size_;
    ::google::protobuf::internal::ArenaStringPtr username_;
    ::google::protobuf::internal::ArenaStringPtr password_;
    ::google::protobuf::internal::ArenaStringPtr mfa_code_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_auth_2eproto;
};

extern const ::google::protobuf::internal::ClassDataFull LoginRequest_class_data_;

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// LoginRequest

// string username = 1;
inline void LoginRequest::clear_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.username_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& LoginRequest::username() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:securecloud.auth.LoginRequest.username)
  return _internal_username();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LoginRequest::set_username(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.username_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:securecloud.auth.LoginRequest.username)
}
inline ::std::string* PROTOBUF_NONNULL LoginRequest::mutable_username()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_username();
  // @@protoc_insertion_point(field_mutable:securecloud.auth.LoginRequest.username)
  return _s;
}
inline const ::std::string& LoginRequest::_internal_username() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.username_.Get();
}
inline void LoginRequest::_internal_set_username(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.username_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LoginRequest::_internal_mutable_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.username_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LoginRequest::release_username() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:securecloud.auth.LoginRequest.username)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.username_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.username_.Set("", GetArena());
  }
  return released;
}
inline void LoginRequest::set_allocated_username(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.username_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.username_.IsDefault()) {
    _impl_.username_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:securecloud.auth.LoginRequest.username)
}

// string password = 2;
inline void LoginRequest::clear_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.password_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& LoginRequest::password() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:securecloud.auth.LoginRequest.password)
  return _internal_password();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LoginRequest::set_password(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.password_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:securecloud.auth.LoginRequest.password)
}
inline ::std::string* PROTOBUF_NONNULL LoginRequest::mutable_password()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_password();
  // @@protoc_insertion_point(field_mutable:securecloud.auth.LoginRequest.password)
  return _s;
}
inline const ::std::string& LoginRequest::_internal_password() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.password_.Get();
}
inline void LoginRequest::_internal_set_password(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.password_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LoginRequest::_internal_mutable_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.password_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LoginRequest::release_password() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:securecloud.auth.LoginRequest.password)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.password_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.password_.Set("", GetArena());
  }
  return released;
}
inline void LoginRequest::set_allocated_password(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.password_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.password_.IsDefault()) {
    _impl_.password_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:securecloud.auth.LoginRequest.password)
}

// string mfa_code = 3;
inline void LoginRequest::clear_mfa_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.mfa_code_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline const ::std::string& LoginRequest::mfa_code() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:securecloud.auth.LoginRequest.mfa_code)
  return _internal_mfa_code();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LoginRequest::set_mfa_code(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.mfa_code_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:securecloud.auth.LoginRequest.mfa_code)
}
inline ::std::string* PROTOBUF_NONNULL LoginRequest::mutable_mfa_code()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_mfa_code();
  // @@protoc_insertion_point(field_mutable:securecloud.auth.LoginRequest.mfa_code)
  return _s;
}
inline const ::std::string& LoginRequest::_internal_mfa_code() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.mfa_code_.Get();
}
inline void LoginRequest::_internal_set_mfa_code(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  _impl_.mfa_code_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LoginRequest::_internal_mutable_mfa_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000004U;
  return _impl_.mfa_code_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LoginRequest::release_mfa_code() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:securecloud.auth.LoginRequest.mfa_code)
  if ((_impl_._has_bits_[0] & 0x00000004U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000004U;
  auto* released = _impl_.mfa_code_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.mfa_code_.Set("", GetArena());
  }
  return released;
}
inline void LoginRequest::set_allocated_mfa_code(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000004U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000004U;
  }
  _impl_.mfa_code_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.mfa_code_.IsDefault()) {
    _impl_.mfa_code_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:securecloud.auth.LoginRequest.mfa_code)
}

// -------------------------------------------------------------------

// LoginResponse

// string access_token = 1;
inline void LoginResponse::clear_access_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& LoginResponse::access_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:securecloud.auth.LoginResponse.access_token)
  return _internal_access_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LoginResponse::set_access_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.access_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:securecloud.auth.LoginResponse.access_token)
}
inline ::std::string* PROTOBUF_NONNULL LoginResponse::mutable_access_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_access_token();
  // @@protoc_insertion_point(field_mutable:securecloud.auth.LoginResponse.access_token)
  return _s;
}
inline const ::std::string& LoginResponse::_internal_access_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.access_token_.Get();
}
inline void LoginResponse::_internal_set_access_token(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.access_token_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LoginResponse::_internal_mutable_access_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.access_token_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LoginResponse::release_access_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:securecloud.auth.LoginResponse.access_token)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.access_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.access_token_.Set("", GetArena());
  }
  return released;
}
inline void LoginResponse::set_allocated_access_token(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.access_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.access_token_.IsDefault()) {
    _impl_.access_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:securecloud.auth.LoginResponse.access_token)
}

// string refresh_token = 2;
inline void LoginResponse::clear_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline const ::std::string& LoginResponse::refresh_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:securecloud.auth.LoginResponse.refresh_token)
  return _internal_refresh_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void LoginResponse::set_refresh_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.refresh_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:securecloud.auth.LoginResponse.refresh_token)
}
inline ::std::string* PROTOBUF_NONNULL LoginResponse::mutable_refresh_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_refresh_token();
  // @@protoc_insertion_point(field_mutable:securecloud.auth.LoginResponse.refresh_token)
  return _s;
}
inline const ::std::string& LoginResponse::_internal_refresh_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refresh_token_.Get();
}
inline void LoginResponse::_internal_set_refresh_token(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  _impl_.refresh_token_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL LoginResponse::_internal_mutable_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000002U;
  return _impl_.refresh_token_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE LoginResponse::release_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:securecloud.auth.LoginResponse.refresh_token)
  if ((_impl_._has_bits_[0] & 0x00000002U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000002U;
  auto* released = _impl_.refresh_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.refresh_token_.Set("", GetArena());
  }
  return released;
}
inline void LoginResponse::set_allocated_refresh_token(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000002U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000002U;
  }
  _impl_.refresh_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.refresh_token_.IsDefault()) {
    _impl_.refresh_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:securecloud.auth.LoginResponse.refresh_token)
}

// int64 expires_in = 3;
inline void LoginResponse::clear_expires_in() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_in_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000004U;
}
inline ::int64_t LoginResponse::expires_in() const {
  // @@protoc_insertion_point(field_get:securecloud.auth.LoginResponse.expires_in)
  return _internal_expires_in();
}
inline void LoginResponse::set_expires_in(::int64_t value) {
  _internal_set_expires_in(value);
  _impl_._has_bits_[0] |= 0x00000004U;
  // @@protoc_insertion_point(field_set:securecloud.auth.LoginResponse.expires_in)
}
inline ::int64_t LoginResponse::_internal_expires_in() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expires_in_;
}
inline void LoginResponse::_internal_set_expires_in(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_in_ = value;
}

// -------------------------------------------------------------------

// RefreshTokenRequest

// string refresh_token = 1;
inline void RefreshTokenRequest::clear_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.refresh_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RefreshTokenRequest::refresh_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:securecloud.auth.RefreshTokenRequest.refresh_token)
  return _internal_refresh_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RefreshTokenRequest::set_refresh_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.refresh_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:securecloud.auth.RefreshTokenRequest.refresh_token)
}
inline ::std::string* PROTOBUF_NONNULL RefreshTokenRequest::mutable_refresh_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_refresh_token();
  // @@protoc_insertion_point(field_mutable:securecloud.auth.RefreshTokenRequest.refresh_token)
  return _s;
}
inline const ::std::string& RefreshTokenRequest::_internal_refresh_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.refresh_token_.Get();
}
inline void RefreshTokenRequest::_internal_set_refresh_token(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.refresh_token_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RefreshTokenRequest::_internal_mutable_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.refresh_token_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RefreshTokenRequest::release_refresh_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:securecloud.auth.RefreshTokenRequest.refresh_token)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.refresh_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.refresh_token_.Set("", GetArena());
  }
  return released;
}
inline void RefreshTokenRequest::set_allocated_refresh_token(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.refresh_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.refresh_token_.IsDefault()) {
    _impl_.refresh_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:securecloud.auth.RefreshTokenRequest.refresh_token)
}

// -------------------------------------------------------------------

// RefreshTokenResponse

// string access_token = 1;
inline void RefreshTokenResponse::clear_access_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RefreshTokenResponse::access_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:securecloud.auth.RefreshTokenResponse.access_token)
  return _internal_access_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RefreshTokenResponse::set_access_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.access_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:securecloud.auth.RefreshTokenResponse.access_token)
}
inline ::std::string* PROTOBUF_NONNULL RefreshTokenResponse::mutable_access_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_access_token();
  // @@protoc_insertion_point(field_mutable:securecloud.auth.RefreshTokenResponse.access_token)
  return _s;
}
inline const ::std::string& RefreshTokenResponse::_internal_access_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.access_token_.Get();
}
inline void RefreshTokenResponse::_internal_set_access_token(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.access_token_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RefreshTokenResponse::_internal_mutable_access_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.access_token_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RefreshTokenResponse::release_access_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:securecloud.auth.RefreshTokenResponse.access_token)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.access_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.access_token_.Set("", GetArena());
  }
  return released;
}
inline void RefreshTokenResponse::set_allocated_access_token(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.access_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.access_token_.IsDefault()) {
    _impl_.access_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:securecloud.auth.RefreshTokenResponse.access_token)
}

// int64 expires_in = 2;
inline void RefreshTokenResponse::clear_expires_in() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_in_ = ::int64_t{0};
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline ::int64_t RefreshTokenResponse::expires_in() const {
  // @@protoc_insertion_point(field_get:securecloud.auth.RefreshTokenResponse.expires_in)
  return _internal_expires_in();
}
inline void RefreshTokenResponse::set_expires_in(::int64_t value) {
  _internal_set_expires_in(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:securecloud.auth.RefreshTokenResponse.expires_in)
}
inline ::int64_t RefreshTokenResponse::_internal_expires_in() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.expires_in_;
}
inline void RefreshTokenResponse::_internal_set_expires_in(::int64_t value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.expires_in_ = value;
}

// -------------------------------------------------------------------

// ValidateTokenRequest

// string access_token = 1;
inline void ValidateTokenRequest::clear_access_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.access_token_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ValidateTokenRequest::access_token() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:securecloud.auth.ValidateTokenRequest.access_token)
  return _internal_access_token();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ValidateTokenRequest::set_access_token(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.access_token_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:securecloud.auth.ValidateTokenRequest.access_token)
}
inline ::std::string* PROTOBUF_NONNULL ValidateTokenRequest::mutable_access_token()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_access_token();
  // @@protoc_insertion_point(field_mutable:securecloud.auth.ValidateTokenRequest.access_token)
  return _s;
}
inline const ::std::string& ValidateTokenRequest::_internal_access_token() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.access_token_.Get();
}
inline void ValidateTokenRequest::_internal_set_access_token(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.access_token_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ValidateTokenRequest::_internal_mutable_access_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.access_token_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ValidateTokenRequest::release_access_token() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:securecloud.auth.ValidateTokenRequest.access_token)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.access_token_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.access_token_.Set("", GetArena());
  }
  return released;
}
inline void ValidateTokenRequest::set_allocated_access_token(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.access_token_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.access_token_.IsDefault()) {
    _impl_.access_token_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:securecloud.auth.ValidateTokenRequest.access_token)
}

// -------------------------------------------------------------------

// ValidateTokenResponse

// bool valid = 1;
inline void ValidateTokenResponse::clear_valid() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.valid_ = false;
  _impl_._has_bits_[0] &= ~0x00000002U;
}
inline bool ValidateTokenResponse::valid() const {
  // @@protoc_insertion_point(field_get:securecloud.auth.ValidateTokenResponse.valid)
  return _internal_valid();
}
inline void ValidateTokenResponse::set_valid(bool value) {
  _internal_set_valid(value);
  _impl_._has_bits_[0] |= 0x00000002U;
  // @@protoc_insertion_point(field_set:securecloud.auth.ValidateTokenResponse.valid)
}
inline bool ValidateTokenResponse::_internal_valid() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.valid_;
}
inline void ValidateTokenResponse::_internal_set_valid(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.valid_ = value;
}

// string user_id = 2;
inline void ValidateTokenResponse::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& ValidateTokenResponse::user_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:securecloud.auth.ValidateTokenResponse.user_id)
  return _internal_user_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void ValidateTokenResponse::set_user_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.user_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:securecloud.auth.ValidateTokenResponse.user_id)
}
inline ::std::string* PROTOBUF_NONNULL ValidateTokenResponse::mutable_user_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_user_id();
  // @@protoc_insertion_point(field_mutable:securecloud.auth.ValidateTokenResponse.user_id)
  return _s;
}
inline const ::std::string& ValidateTokenResponse::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_.Get();
}
inline void ValidateTokenResponse::_internal_set_user_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.user_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL ValidateTokenResponse::_internal_mutable_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.user_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE ValidateTokenResponse::release_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:securecloud.auth.ValidateTokenResponse.user_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.user_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.user_id_.Set("", GetArena());
  }
  return released;
}
inline void ValidateTokenResponse::set_allocated_user_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.user_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_id_.IsDefault()) {
    _impl_.user_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:securecloud.auth.ValidateTokenResponse.user_id)
}

// repeated string permissions = 3;
inline int ValidateTokenResponse::_internal_permissions_size() const {
  return _internal_permissions().size();
}
inline int ValidateTokenResponse::permissions_size() const {
  return _internal_permissions_size();
}
inline void ValidateTokenResponse::clear_permissions() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.permissions_.Clear();
}
inline ::std::string* PROTOBUF_NONNULL ValidateTokenResponse::add_permissions()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::std::string* _s = _internal_mutable_permissions()->Add();
  // @@protoc_insertion_point(field_add_mutable:securecloud.auth.ValidateTokenResponse.permissions)
  return _s;
}
inline const ::std::string& ValidateTokenResponse::permissions(int index) const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:securecloud.auth.ValidateTokenResponse.permissions)
  return _internal_permissions().Get(index);
}
inline ::std::string* PROTOBUF_NONNULL ValidateTokenResponse::mutable_permissions(int index)
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable:securecloud.auth.ValidateTokenResponse.permissions)
  return _internal_mutable_permissions()->Mutable(index);
}
template <typename Arg_, typename... Args_>
inline void ValidateTokenResponse::set_permissions(int index, Arg_&& value, Args_... args) {
  ::google::protobuf::internal::AssignToString(*_internal_mutable_permissions()->Mutable(index), ::std::forward<Arg_>(value),
                        args... );
  // @@protoc_insertion_point(field_set:securecloud.auth.ValidateTokenResponse.permissions)
}
template <typename Arg_, typename... Args_>
inline void ValidateTokenResponse::add_permissions(Arg_&& value, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::google::protobuf::internal::AddToRepeatedPtrField(*_internal_mutable_permissions(),
                               ::std::forward<Arg_>(value),
                               args... );
  // @@protoc_insertion_point(field_add:securecloud.auth.ValidateTokenResponse.permissions)
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>& ValidateTokenResponse::permissions()
    const ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:securecloud.auth.ValidateTokenResponse.permissions)
  return _internal_permissions();
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ValidateTokenResponse::mutable_permissions() ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:securecloud.auth.ValidateTokenResponse.permissions)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  return _internal_mutable_permissions();
}
inline const ::google::protobuf::RepeatedPtrField<::std::string>&
ValidateTokenResponse::_internal_permissions() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.permissions_;
}
inline ::google::protobuf::RepeatedPtrField<::std::string>* PROTOBUF_NONNULL
ValidateTokenResponse::_internal_mutable_permissions() {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return &_impl_.permissions_;
}

// -------------------------------------------------------------------

// RevokeTokensRequest

// string user_id = 1;
inline void RevokeTokensRequest::clear_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.user_id_.ClearToEmpty();
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline const ::std::string& RevokeTokensRequest::user_id() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_get:securecloud.auth.RevokeTokensRequest.user_id)
  return _internal_user_id();
}
template <typename Arg_, typename... Args_>
PROTOBUF_ALWAYS_INLINE void RevokeTokensRequest::set_user_id(Arg_&& arg, Args_... args) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.user_id_.Set(static_cast<Arg_&&>(arg), args..., GetArena());
  // @@protoc_insertion_point(field_set:securecloud.auth.RevokeTokensRequest.user_id)
}
inline ::std::string* PROTOBUF_NONNULL RevokeTokensRequest::mutable_user_id()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  ::std::string* _s = _internal_mutable_user_id();
  // @@protoc_insertion_point(field_mutable:securecloud.auth.RevokeTokensRequest.user_id)
  return _s;
}
inline const ::std::string& RevokeTokensRequest::_internal_user_id() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.user_id_.Get();
}
inline void RevokeTokensRequest::_internal_set_user_id(const ::std::string& value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  _impl_.user_id_.Set(value, GetArena());
}
inline ::std::string* PROTOBUF_NONNULL RevokeTokensRequest::_internal_mutable_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_._has_bits_[0] |= 0x00000001U;
  return _impl_.user_id_.Mutable( GetArena());
}
inline ::std::string* PROTOBUF_NULLABLE RevokeTokensRequest::release_user_id() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  // @@protoc_insertion_point(field_release:securecloud.auth.RevokeTokensRequest.user_id)
  if ((_impl_._has_bits_[0] & 0x00000001U) == 0) {
    return nullptr;
  }
  _impl_._has_bits_[0] &= ~0x00000001U;
  auto* released = _impl_.user_id_.Release();
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString()) {
    _impl_.user_id_.Set("", GetArena());
  }
  return released;
}
inline void RevokeTokensRequest::set_allocated_user_id(::std::string* PROTOBUF_NULLABLE value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (value != nullptr) {
    _impl_._has_bits_[0] |= 0x00000001U;
  } else {
    _impl_._has_bits_[0] &= ~0x00000001U;
  }
  _impl_.user_id_.SetAllocated(value, GetArena());
  if (::google::protobuf::internal::DebugHardenForceCopyDefaultString() && _impl_.user_id_.IsDefault()) {
    _impl_.user_id_.Set("", GetArena());
  }
  // @@protoc_insertion_point(field_set_allocated:securecloud.auth.RevokeTokensRequest.user_id)
}

// -------------------------------------------------------------------

// RevokeTokensResponse

// bool success = 1;
inline void RevokeTokensResponse::clear_success() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = false;
  _impl_._has_bits_[0] &= ~0x00000001U;
}
inline bool RevokeTokensResponse::success() const {
  // @@protoc_insertion_point(field_get:securecloud.auth.RevokeTokensResponse.success)
  return _internal_success();
}
inline void RevokeTokensResponse::set_success(bool value) {
  _internal_set_success(value);
  _impl_._has_bits_[0] |= 0x00000001U;
  // @@protoc_insertion_point(field_set:securecloud.auth.RevokeTokensResponse.success)
}
inline bool RevokeTokensResponse::_internal_success() const {
  ::google::protobuf::internal::TSanRead(&_impl_);
  return _impl_.success_;
}
inline void RevokeTokensResponse::_internal_set_success(bool value) {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  _impl_.success_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)
}  // namespace auth
}  // namespace securecloud


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // auth_2eproto_2epb_2eh
